openapi: 3.0.3
info:
  description: Example of Candidate Environmental Data Retrieval API OpenAPI docs
  title: Environmental Data Retrieval API's
  version: 0.0.10
servers:
- url: http://localhost:8080/edr
tags:
- description: Essential characteristics of the information available from the API.
  name: Capabilities
- description: Description of the information available from the collections
  name: Collection metadata
- description: Description of the information available from instances of a collection
  name: Instance metadata
- description: Data queries available.
  name: Collection data queries
- description: Data queries available on instances of the collection.
  name: Instance data queries
paths:
  /:
    get:
      description: The landing page provides links to the API definition, the Conformance
        statements and the metadata about the feature data in this dataset.
      operationId: getLandingPage
      parameters:
      - description: format to return the data response in
        in: query
        name: f
        required: false
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/landingPage'
            text/html:
              schema:
                type: string
          description: links to the API capabilities
      summary: landing page of this API
      tags:
      - Capabilities
      x-eov-operation-handler: controllers/CapabilitiesController
  /conformance:
    get:
      description: list all requirements classes specified in a standard that the
        server conforms to
      operationId: getRequirementsClasses
      parameters:
      - description: format to return the data response in
        in: query
        name: f
        required: false
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/confClasses'
            text/html:
              schema:
                type: string
          description: the URIs of all requirements classes supported by the server
      summary: information about standards that this API conforms to
      tags:
      - Capabilities
      x-eov-operation-handler: controllers/CapabilitiesController
  /groups:
    get:
      operationId: listGroups
      parameters:
      - description: format to return the data response in
        in: query
        name: f
        required: false
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/groups'
            text/html:
              schema:
                type: string
          description: List the available data groups.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/exception'
            text/html:
              schema:
                type: string
          description: An error occured.
      summary: Provide a list of avialable data groups
      tags:
      - Capabilities
      x-eov-operation-handler: controllers/CapabilitiesController
  /groups/{groupId}:
    get:
      operationId: groupInfomation
      parameters:
      - description: Identifier (name) of a specific group
        in: path
        name: groupId
        required: true
        schema:
          type: string
      - description: format to return the data response in
        in: query
        name: f
        required: false
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/groups'
            text/html:
              schema:
                type: string
          description: List of links to the data members of the group, these can either
            be other groups or collections.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/exception'
            text/html:
              schema:
                type: string
          description: An error occured.
      summary: List of links to information available in the group
      tags:
      - Capabilities
      x-eov-operation-handler: controllers/CapabilitiesController
  /collections:
    get:
      operationId: listCollections
      parameters:
      - description: |-
          Only features that have a geometry that intersects the bounding box are selected.
          The bounding box is provided as four or six numbers, depending on whether the
          coordinate reference system includes a vertical axis (height or depth):
          * Lower left corner, coordinate axis 1
          * Lower left corner, coordinate axis 2
          * Minimum value, coordinate axis 3 (optional)
          * Upper right corner, coordinate axis 1
          * Upper right corner, coordinate axis 2
          * Maximum value, coordinate axis 3 (optional)
          The coordinate reference system of the values is WGS 84 longitude/latitude
          (http://www.opengis.net/def/crs/OGC/1.3/CRS84) unless a different coordinate
          reference system is specified in the parameter `bbox-crs`.
          For WGS 84 longitude/latitude the values are in most cases the sequence of
          minimum longitude, minimum latitude, maximum longitude and maximum latitude.
          However, in cases where the box spans the antimeridian the first value
          (west-most box edge) is larger than the third value (east-most box edge).
          If the vertical axis is included, the third and the sixth number are the
          bottom and the top of the 3-dimensional bounding box.
          If a feature has multiple spatial geometry properties, it is the decision of the
          server whether only a single spatial geometry property is used to determine
          the extent or all relevant geometries.
        explode: false
        in: query
        name: bbox
        required: false
        schema:
          oneOf:
          - items:
              maxItems: 4
              minItems: 4
              type: object
            type: array
          - items:
              maxItems: 6
              minItems: 6
              type: object
            type: array
#          oneOf:
#            - $ref: '#/components/schemas/fourElementArray'
#            - $ref: '#/components/schemas/sixElementArray'
        style: form
      - description: |-
          Either a date-time or an interval, open or closed. Date and time expressions adhere to RFC 3339. Open intervals are expressed using double-dots.
          Examples:
          * A date-time: "2018-02-12T23:20:50Z" * A closed interval: "2018-02-12T00:00:00Z/2018-03-18T12:31:12Z" * Open intervals: "2018-02-12T00:00:00Z/.." or "../2018-03-18T12:31:12Z"
          Only features that have a temporal property that intersects the value of `datetime` are selected.
          If a feature has multiple temporal properties, it is the decision of the server whether only a single temporal property is used to determine the extent or all relevant temporal properties.
        explode: false
        in: query
        name: datetime
        required: false
        schema:
          type: string
        style: form
      - description: format to return the data response in
        in: query
        name: f
        required: false
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/collections'
            text/html:
              schema:
                type: string
          description: Metdata about the Environmental data collections shared by
            this API.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/exception'
            text/html:
              schema:
                type: string
          description: An error occured.
      summary: List the avialable collections from the service
      tags:
      - Capabilities
      x-eov-operation-handler: controllers/CapabilitiesController
  /collections/{collectionId}:
    get:
      description: This will provide information about the query types that are supported
        by the chosen collection Use content negotiation to request HTML or JSON.
      operationId: getQueries
      parameters:
      - description: Identifier (id) of a specific collection
        in: path
        name: collectionId
        required: true
        schema:
          type: string
      - description: format to return the data response in
        in: query
        name: f
        required: false
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/collection'
            text/html:
              schema:
                type: string
          description: Metadata about the {collectionId} collection shared by this
            API.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/exception'
            text/html:
              schema:
                type: string
          description: An error occured.
      summary: List query types supported by the collection
      tags:
      - Collection metadata
      x-eov-operation-handler: controllers/CollectionMetadataController
  /collections/{collectionId}/position:
    get:
      description: Query end point for position queries
      operationId: getDataForPoint
      parameters:
      - description: Identifier (id) of a specific collection
        in: path
        name: collectionId
        required: true
        schema:
          type: string
      - description: "location(s) to return data for, the coordinates are defined\
          \ by a Well Known Text\n(wkt) string. to retrieve a single location :\n\n\
          POINT(x y) i.e. POINT(0 51.48) for Greenwich, London\n\nAnd for a list of\
          \ locations\n\nMULTIPOINT((x y),(x1 y1),(x2 y2),(x3 y3))\n\ni.e.\nMULTIPOINT((38.9\
          \ -77),(48.85 2.35),(39.92 116.38),(-35.29 149.1),(51.5 -0.1))\n\nsee http://portal.opengeospatial.org/files/?artifact_id=25355\
          \ and \nhttps://en.wikipedia.org/wiki/Well-known_text_representation_of_geometry\n\
          \nthe coordinate values will depend on the CRS parameter, if this is not\
          \ defined\nthe values will be assumed to WGS84 values (i.e x=longitude and\
          \ y=latitude)\n"
        in: query
        name: coords
        required: true
        schema:
          type: string
      - description: "Define the vertical level to return data from \ni.e. z=level\n\
          \nfor instance if the 850hPa pressure level is being queried\n\nz=850\n\n\
          or a range to return data for all levels between and including 2 defined\
          \ levels\ni.e. z=minimum value/maximum value\n\nfor instance if all values\
          \ between and including 10m and 100m\n\nz=10/100\n\nfinally a list of height\
          \ values can be specified\ni.e. z=value1,value2,value3\n\nfor instance if\
          \ values at 2m, 10m and 80m are required\n\nz=2,10,80\n\nAn Arithmetic sequence\
          \ using Recurring height intervals, the difference is the number of recurrences\
          \ is defined at the start \nand the amount to increment the height by is\
          \ defined at the end\n\ni.e. z=Rn/min height/height interval\n\nso if the\
          \ request was for 20 height levels 50m apart starting at 100m:\n\nz=R20/100/50\n\
          \nWhen not specified data from all available heights SHOULD be returned\n"
        in: query
        name: z
        required: false
        schema:
          type: string
      - description: |-
          Either a date-time or an interval, open or closed. Date and time expressions adhere to RFC 3339. Open intervals are expressed using double-dots.
          Examples:
          * A date-time: "2018-02-12T23:20:50Z" * A closed interval: "2018-02-12T00:00:00Z/2018-03-18T12:31:12Z" * Open intervals: "2018-02-12T00:00:00Z/.." or "../2018-03-18T12:31:12Z"
          Only features that have a temporal property that intersects the value of `datetime` are selected.
          If a feature has multiple temporal properties, it is the decision of the server whether only a single temporal property is used to determine the extent or all relevant temporal properties.
        explode: false
        in: query
        name: datetime
        required: false
        schema:
          type: string
        style: form
      - description: comma delimited list of parameters to retrieve data for.  Valid
          parameters are listed in the collections metadata
        in: query
        name: parameter-name
        required: false
        schema:
          type: string
      - description: identifier (id) of the coordinate system to return data in list
          of valid crs identifiers for the chosen collection are defined in the metadata
          responses.  If not supplied the coordinate reference system will default
          to WGS84.
        example: native
        in: query
        name: crs
        required: false
        schema:
          type: string
      - description: format to return the data response in
        in: query
        name: f
        required: false
        schema:
          type: string
      responses:
        "200":
          content:
            application/prs.coverage+json:
              schema:
                $ref: '#/components/schemas/coverageJSON'
            application/geo+json:
              schema:
                $ref: '#/components/schemas/edrFeatureCollectionGeoJSON'
            application/x-netcdf: {}
            text/xml: {}
          description: Data ranges required to construct valid queries for the choosen
            data collection
        "202":
          description: Data request still being processed
        "308":
          description: Request will take a significant time to process
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/exception'
            text/xml: {}
          description: Invalid request.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/exception'
            text/xml: {}
          description: Requested data not found.
        "413":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/exception'
            text/xml: {}
          description: Requested data volume to large to be handled by this service.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/exception'
            text/html:
              schema:
                type: string
          description: An error occured.
      summary: Query end point for position queries  of collection {collectionId}
      tags:
      - Collection data queries
      x-eov-operation-handler: controllers/CollectionDataQueriesController
  /collections/{collectionId}/radius:
    get:
      description: Query end point for to return values within a defined radius of
        a point queries
      operationId: getDataForRadius
      parameters:
      - description: Identifier (id) of a specific collection
        in: path
        name: collectionId
        required: true
        schema:
          type: string
      - description: "location(s) to return data for, the coordinates are defined\
          \ by a Well Known Text\n(wkt) string. to retrieve a single location :\n\n\
          POINT(x y) i.e. POINT(0 51.48) for Greenwich, London\n\nsee http://portal.opengeospatial.org/files/?artifact_id=25355\
          \ and \nhttps://en.wikipedia.org/wiki/Well-known_text_representation_of_geometry\n\
          \nthe coordinate values will depend on the CRS parameter, if this is not\
          \ defined\nthe values will be assumed to WGS84 values (i.e x=longitude and\
          \ y=latitude)\n"
        in: query
        name: coords
        required: true
        schema:
          type: string
      - description: Defines radius of area around defined coordinates to include
          in the data selection
        example: 10
        in: query
        name: within
        required: true
        schema:
          type: number
      - description: Distance units for the within parameter
        example: KM
        in: query
        name: withinUnits
        required: true
        schema:
          type: string
      - description: "Define the vertical level to return data from \ni.e. z=level\n\
          \nfor instance if the 850hPa pressure level is being queried\n\nz=850\n\n\
          or a range to return data for all levels between and including 2 defined\
          \ levels\ni.e. z=minimum value/maximum value\n\nfor instance if all values\
          \ between and including 10m and 100m\n\nz=10/100\n\nfinally a list of height\
          \ values can be specified\ni.e. z=value1,value2,value3\n\nfor instance if\
          \ values at 2m, 10m and 80m are required\n\nz=2,10,80\n\nAn Arithmetic sequence\
          \ using Recurring height intervals, the difference is the number of recurrences\
          \ is defined at the start \nand the amount to increment the height by is\
          \ defined at the end\n\ni.e. z=Rn/min height/height interval\n\nso if the\
          \ request was for 20 height levels 50m apart starting at 100m:\n\nz=R20/100/50\n\
          \nWhen not specified data from all available heights SHOULD be returned\n"
        in: query
        name: z
        required: false
        schema:
          type: string
      - description: |-
          Either a date-time or an interval, open or closed. Date and time expressions adhere to RFC 3339. Open intervals are expressed using double-dots.
          Examples:
          * A date-time: "2018-02-12T23:20:50Z" * A closed interval: "2018-02-12T00:00:00Z/2018-03-18T12:31:12Z" * Open intervals: "2018-02-12T00:00:00Z/.." or "../2018-03-18T12:31:12Z"
          Only features that have a temporal property that intersects the value of `datetime` are selected.
          If a feature has multiple temporal properties, it is the decision of the server whether only a single temporal property is used to determine the extent or all relevant temporal properties.
        explode: false
        in: query
        name: datetime
        required: false
        schema:
          type: string
        style: form
      - description: comma delimited list of parameters to retrieve data for.  Valid
          parameters are listed in the collections metadata
        in: query
        name: parameter-name
        required: false
        schema:
          type: string
      - description: identifier (id) of the coordinate system to return data in list
          of valid crs identifiers for the chosen collection are defined in the metadata
          responses.  If not supplied the coordinate reference system will default
          to WGS84.
        example: native
        in: query
        name: crs
        required: false
        schema:
          type: string
      - description: format to return the data response in
        in: query
        name: f
        required: false
        schema:
          type: string
      responses:
        "200":
          content:
            application/prs.coverage+json:
              schema:
                $ref: '#/components/schemas/coverageJSON'
            application/geo+json:
              schema:
                $ref: '#/components/schemas/edrFeatureCollectionGeoJSON'
            application/x-netcdf: {}
            text/xml: {}
          description: Data ranges required to construct valid queries for the choosen
            data collection
        "202":
          description: Data request still being processed
        "308":
          description: Request will take a significant time to process
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/exception'
            text/xml: {}
          description: Invalid request.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/exception'
            text/xml: {}
          description: Requested data not found.
        "413":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/exception'
            text/xml: {}
          description: Requested data volume to large to be handled by this service.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/exception'
            text/html:
              schema:
                type: string
          description: An error occured.
      summary: Query end point for radius queries  of collection {collectionId}
      tags:
      - Collection data queries
      x-eov-operation-handler: controllers/CollectionDataQueriesController
  /collections/{collectionId}/area:
    get:
      description: Return the data values for the data area defined by the query parameters
      operationId: getDataForArea
      parameters:
      - description: Identifier (id) of a specific collection
        in: path
        name: collectionId
        required: true
        schema:
          type: string
      - description: "Only data that has a geometry that intersects the area defined\
          \ by the polygon\nare selected. \n\nThe polygon is defined using a Well\
          \ Known Text string following \n\ncoords=POLYGON((x y,x1 y1,x2 y2,...,xn\
          \ yn x y))\n\nwhich are values in the coordinate system defined by the crs\
          \ query parameter \n(if crs is not defined the values will be assumed to\
          \ be WGS84 longitude/latitude coordinates).  \n\nFor instance a polygon\
          \ that roughly describes an area that contains \nSouth West England in WGS84\
          \ would look like: \n\ncoords=POLYGON((-6.1 50.3,-4.35 51.4,-2.6 51.6,-2.8\
          \ 50.6,-5.3 49.9,-6.1,50.3))\n\nsee http://portal.opengeospatial.org/files/?artifact_id=25355\
          \ and \nhttps://en.wikipedia.org/wiki/Well-known_text_representation_of_geometry\n\
          \nThe coords parameter will only support 2D POLYGON definitions"
        in: query
        name: coords
        required: true
        schema:
          type: string
      - description: "Define the vertical level to return data from \ni.e. z=level\n\
          \nfor instance if the 850hPa pressure level is being queried\n\nz=850\n\n\
          or a range to return data for all levels between and including 2 defined\
          \ levels\ni.e. z=minimum value/maximum value\n\nfor instance if all values\
          \ between and including 10m and 100m\n\nz=10/100\n\nfinally a list of height\
          \ values can be specified\ni.e. z=value1,value2,value3\n\nfor instance if\
          \ values at 2m, 10m and 80m are required\n\nz=2,10,80\n\nAn Arithmetic sequence\
          \ using Recurring height intervals, the difference is the number of recurrences\
          \ is defined at the start \nand the amount to increment the height by is\
          \ defined at the end\n\ni.e. z=Rn/min height/height interval\n\nso if the\
          \ request was for 20 height levels 50m apart starting at 100m:\n\nz=R20/100/50\n\
          \nWhen not specified data from all available heights SHOULD be returned\n"
        in: query
        name: z
        required: false
        schema:
          type: string
      - description: |-
          Either a date-time or an interval, open or closed. Date and time expressions adhere to RFC 3339. Open intervals are expressed using double-dots.
          Examples:
          * A date-time: "2018-02-12T23:20:50Z" * A closed interval: "2018-02-12T00:00:00Z/2018-03-18T12:31:12Z" * Open intervals: "2018-02-12T00:00:00Z/.." or "../2018-03-18T12:31:12Z"
          Only features that have a temporal property that intersects the value of `datetime` are selected.
          If a feature has multiple temporal properties, it is the decision of the server whether only a single temporal property is used to determine the extent or all relevant temporal properties.
        explode: false
        in: query
        name: datetime
        required: false
        schema:
          type: string
        style: form
      - description: comma delimited list of parameters to retrieve data for.  Valid
          parameters are listed in the collections metadata
        in: query
        name: parameter-name
        required: false
        schema:
          type: string
      - description: identifier (id) of the coordinate system to return data in list
          of valid crs identifiers for the chosen collection are defined in the metadata
          responses.  If not supplied the coordinate reference system will default
          to WGS84.
        example: native
        in: query
        name: crs
        required: false
        schema:
          type: string
      - description: "Defined it the user requires data at a different resolution\
          \ from the native resolution of the data along the x-axis\n\nIf this is\
          \ a single value it denotes the number of intervals to retrieve data for\
          \ along the x-axis\n  \n  i.e. resolution-x=10 \n  \nwould retrieve 10 values\
          \ along the x-axis from the minimum x coordinate to maximum x coordinate\
          \ (i.e. a value at both the minimum x and maximum x coordinates and 8 values\
          \ between).\n"
        in: query
        name: resolution-x
        required: false
        schema:
          type: object
      - description: "Defined it the user requires data at a different resolution\
          \ from the native resolution of the data along the y-axis\n\nIf this is\
          \ a single value it denotes the number of intervals to retrieve data for\
          \ along the y-axis\n  \n  i.e. resolution-y=10 \n  \nwould retrieve 10 values\
          \ along the y-axis from the minimum y coordinate to maximum y coordinate\
          \ (i.e. a value at both the minimum y and maximum y coordinates and 8 values\
          \ between).\n"
        in: query
        name: resolution-y
        required: false
        schema:
          type: object
      - description: format to return the data response in
        in: query
        name: f
        required: false
        schema:
          type: string
      responses:
        "200":
          content:
            application/prs.coverage+json:
              schema:
                $ref: '#/components/schemas/coverageJSON'
            application/geo+json:
              schema:
                $ref: '#/components/schemas/edrFeatureCollectionGeoJSON'
            application/x-netcdf: {}
            text/xml: {}
          description: Data ranges required to construct valid queries for the choosen
            data collection
        "202":
          description: Data request still being processed
        "308":
          description: Request will take a significant time to process
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/exception'
            text/xml: {}
          description: Invalid request.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/exception'
            text/xml: {}
          description: Requested data not found.
        "413":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/exception'
            text/xml: {}
          description: Requested data volume to large to be handled by this service.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/exception'
            text/html:
              schema:
                type: string
          description: An error occured.
      summary: Query end point for area queries  of collection {collectionId} defined
        by a polygon
      tags:
      - Collection data queries
      x-eov-operation-handler: controllers/CollectionDataQueriesController
  /collections/{collectionId}/corridor:
    get:
      description: Return the data values for the Corridor defined by the query parameters
      operationId: getDataForCorridor
      parameters:
      - description: Identifier (id) of a specific collection
        in: path
        name: collectionId
        required: true
        schema:
          type: string
      - description: "Only data that has a geometry that intersects the area defined\
          \ by the linestring\nare selected. \n\nThe trajectory is defined using a\
          \ Well Known Text string following \n\nA 2D trajectory, on the surface of\
          \ earth with no time or height dimensions: \n    coords=LINESTRING(51.14\
          \ -2.98, 51.36 -2.87, 51.03 -3.15, 50.74 -3.48, 50.9 -3.36)\n\nA 2D trajectory,\
          \ on the surface of earth with all for the same time and no height dimension,\
          \ time value defined in ISO8601 format by the `datetime` query parameter\
          \ : \n    coords=LINESTRING(51.14 -2.98, 51.36 -2.87, 51.03 -3.15, 50.74\
          \ -3.48, 50.9 -3.36)&time=2018-02-12T23:00:00Z \n    \nA 2D trajectory,\
          \ on the surface of earth with no time value but at a fixed height level,\
          \ height defined in the collection height units by the `z` query parameter\
          \ : \n    coords=LINESTRING(51.14 -2.98, 51.36 -2.87, 51.03 -3.15, 50.74\
          \ -3.48, 50.9 -3.36)&z=850 \n\nA 2D trajectory, on the surface of earth\
          \ with all for the same time and at a fixed height level, time value defined\
          \ in ISO8601 format by the `datetime` query parameter and height defined\
          \ in the collection height units by the `z` query parameter : \n    coords=LINESTRING(51.14\
          \ -2.98, 51.36 -2.87, 51.03 -3.15, 50.74 -3.48, 50.9 -3.36)&time=2018-02-12T23:00:00Z&z=850\
          \ \n\nA 3D trajectory, on the surface of the earth but over a time range\
          \ with no height values:\ncoords=LINESTRINGM(51.14 -2.98 1560507000, 51.36\
          \ -2.87 1560507600, 51.03 -3.15 1560508200, 50.74 -3.48 1560508500, 50.9\
          \ -3.36 1560510240)\n\nA 3D trajectory, on the surface of the earth but\
          \ over a time range with a fixed height value, height defined in the collection\
          \ height units by the `z` query parameter : \ncoords=LINESTRINGM(51.14 -2.98\
          \ 1560507000, 51.36 -2.87 1560507600, 51.03 -3.15 1560508200, 50.74 -3.48\
          \ 1560508500, 50.9 -3.36 1560510240)&z=200\n\n\nA 3D trajectory, through\
          \ a 3D volume with height or depth, but no defined time:\ncoords=LINESTRINGZ(51.14\
          \ -2.98 0.1, 51.36 -2.87 0.2, 51.03 -3.15 0.3, 50.74 -3.48 0.4, 50.9 -3.36\
          \ 0.5)\n\nA 3D trajectory, through a 3D volume with height or depth, but\
          \ a fixed time time value defined in ISO8601 format by the `datetime` query\
          \ parameter:\ncoords=LINESTRINGZ(51.14 -2.98 0.1, 51.36 -2.87 0.2, 51.03\
          \ -3.15 0.3, 50.74 -3.48 0.4, 50.9 -3.36 0.5)&time=2018-02-12T23:00:00Z\n\
          \nA 4D trajectory, through a 3D volume but over a time range:\ncoords=LINESTRINGZM(51.14\
          \ -2.98 0.1 1560507000,51.36 -2.87 0.2 1560507600, 51.03 -3.15 0.3 1560508200,\
          \ 50.74 -3.48 0.4 1560508500, 50.9 -3.36 0.5 1560510240)\n(using either\
          \ the `time` or `z` parameters with a 4D trajectory wil generate an error\
          \ response)\n\nwhere Z in `LINESTRINGZ` and `LINESTRINGZM` refers to the\
          \ height value.  \n`If the specified CRS does not define the height units,\
          \ the heights units will default to metres above mean sea level`\n\nand\
          \ the M in `LINESTRINGM` and `LINESTRINGZM` refers to the number of seconds\
          \ that have elapsed since the Unix epoch, that is the time 00:00:00 UTC\
          \ on 1 January 1970. See\nhttps://en.wikipedia.org/wiki/Unix_time"
        in: query
        name: coords
        required: true
        schema:
          type: string
      - description: "Define the vertical level to return data from \ni.e. z=level\n\
          \nfor instance if the 850hPa pressure level is being queried\n\nz=850\n\n\
          or a range to return data for all levels between and including 2 defined\
          \ levels\ni.e. z=minimum value/maximum value\n\nfor instance if all values\
          \ between and including 10m and 100m\n\nz=10/100\n\nfinally a list of height\
          \ values can be specified\ni.e. z=value1,value2,value3\n\nfor instance if\
          \ values at 2m, 10m and 80m are required\n\nz=2,10,80\n\nAn Arithmetic sequence\
          \ using Recurring height intervals, the difference is the number of recurrences\
          \ is defined at the start \nand the amount to increment the height by is\
          \ defined at the end\n\ni.e. z=Rn/min height/height interval\n\nso if the\
          \ request was for 20 height levels 50m apart starting at 100m:\n\nz=R20/100/50\n\
          \nWhen not specified data from all available heights SHOULD be returned\n"
        in: query
        name: z
        required: false
        schema:
          type: string
      - description: |-
          Either a date-time or an interval, open or closed. Date and time expressions adhere to RFC 3339. Open intervals are expressed using double-dots.
          Examples:
          * A date-time: "2018-02-12T23:20:50Z" * A closed interval: "2018-02-12T00:00:00Z/2018-03-18T12:31:12Z" * Open intervals: "2018-02-12T00:00:00Z/.." or "../2018-03-18T12:31:12Z"
          Only features that have a temporal property that intersects the value of `datetime` are selected.
          If a feature has multiple temporal properties, it is the decision of the server whether only a single temporal property is used to determine the extent or all relevant temporal properties.
        explode: false
        in: query
        name: datetime
        required: false
        schema:
          type: string
        style: form
      - description: comma delimited list of parameters to retrieve data for.  Valid
          parameters are listed in the collections metadata
        in: query
        name: parameter-name
        required: false
        schema:
          type: string
      - description: "width of the corridor\n\nThe width value represents the whole\
          \ width of the corridor where\nthe trajectory supplied in the `coords` query\
          \ parameter is the centre\npoint of the corridor\n\n`corridor-width={width}`\n\
          \ne.g.  corridor-width=100\n\nWould be a request for a corridor 100 units\
          \ wide with the coords parameter values being the centre point of the requested\
          \ corridor, \nthe request would be for data values 50 units either side\
          \ of the trajectory coordinates defined in the coords parameter. \n\nThe\
          \ width units supported by the collection will be provided in the API metadata\
          \ responses\n"
        in: query
        name: corridor-width
        required: true
        schema:
          type: string
      - description: Distance units for the corridor-width parameter
        example: KM
        in: query
        name: width-units
        required: true
        schema:
          type: string
      - description: "height of the corridor\n\nThe height value represents the whole\
          \ height of the corridor where\nthe trajectory supplied in the `coords`\
          \ query parameter is the centre\npoint of the corridor\n\n`corridor-height={height}`\n\
          \ne.g.  corridor-height=100\n\nWould be a request for a corridor 100 units\
          \ high with the coords parameter values being the centre point of the requested\
          \ corridor, \nthe request would be for data values 50 units either side\
          \ of the trajectory coordinates defined in the coords parameter. \n\nThe\
          \ height units supported by the collection will be provided in the API metadata\
          \ responses\n"
        in: query
        name: corridor-height
        required: true
        schema:
          type: string
      - description: Distance units for the corridor-height parameter
        example: KM
        in: query
        name: height-units
        required: true
        schema:
          type: string
      - description: "Defined it the user requires data at a different resolution\
          \ from the native resolution of the data along the x-axis\n\nIf this is\
          \ a single value it denotes the number of intervals to retrieve data for\
          \ along the x-axis\n  \n  i.e. resolution-x=10 \n  \nwould retrieve 10 values\
          \ along the x-axis from the minimum x coordinate to maximum x coordinate\
          \ (i.e. a value at both the minimum x and maximum x coordinates and 8 values\
          \ between).\n"
        in: query
        name: resolution-x
        required: false
        schema:
          type: object
      - description: "Defined it the user requires data at a different resolution\
          \ from the native resolution of the data along the z-axis\n\nIf this is\
          \ a single value it denotes the number of intervals to retrieve data for\
          \ along the z-axis\n  \n  i.e. resolution-z=10 \n  \nwould retrieve 10 values\
          \ along the z-axis from the minimum z coordinate to maximum z  coordinate\
          \ (i.e. a value at both the minimum z and maximum z coordinates and 8 values\
          \ between).\n"
        in: query
        name: resolution-z
        required: false
        schema:
          type: object
      - description: identifier (id) of the coordinate system to return data in list
          of valid crs identifiers for the chosen collection are defined in the metadata
          responses.  If not supplied the coordinate reference system will default
          to WGS84.
        example: native
        in: query
        name: crs
        required: false
        schema:
          type: string
      - description: format to return the data response in
        in: query
        name: f
        required: false
        schema:
          type: string
      responses:
        "200":
          content:
            application/prs.coverage+json:
              schema:
                $ref: '#/components/schemas/coverageJSON'
            application/geo+json:
              schema:
                $ref: '#/components/schemas/edrFeatureCollectionGeoJSON'
            application/x-netcdf: {}
            text/xml: {}
          description: Data ranges required to construct valid queries for the choosen
            data collection
        "202":
          description: Data request still being processed
        "308":
          description: Request will take a significant time to process
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/exception'
            text/xml: {}
          description: Invalid request.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/exception'
            text/xml: {}
          description: Requested data not found.
        "413":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/exception'
            text/xml: {}
          description: Requested data volume to large to be handled by this service.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/exception'
            text/html:
              schema:
                type: string
          description: An error occured.
      summary: Query end point for Corridor queries  of collection {collectionId}
        defined by a polygon
      tags:
      - Collection data queries
      x-eov-operation-handler: controllers/CollectionDataQueriesController
  /collections/{collectionId}/cube:
    get:
      description: Return the data values for the data Cube defined by the query parameters
      operationId: getDataForCube
      parameters:
      - description: Identifier (id) of a specific collection
        in: path
        name: collectionId
        required: true
        schema:
          type: string
      - description: |-
          Only features that have a geometry that intersects the bounding box are selected.
          The bounding box is provided as four or six numbers, depending on whether the
          coordinate reference system includes a vertical axis (height or depth):
          * Lower left corner, coordinate axis 1
          * Lower left corner, coordinate axis 2
          * Minimum value, coordinate axis 3 (optional)
          * Upper right corner, coordinate axis 1
          * Upper right corner, coordinate axis 2
          * Maximum value, coordinate axis 3 (optional)
          The coordinate reference system of the values is WGS 84 longitude/latitude
          (http://www.opengis.net/def/crs/OGC/1.3/CRS84) unless a different coordinate
          reference system is specified in the parameter `bbox-crs`.
          For WGS 84 longitude/latitude the values are in most cases the sequence of
          minimum longitude, minimum latitude, maximum longitude and maximum latitude.
          However, in cases where the box spans the antimeridian the first value
          (west-most box edge) is larger than the third value (east-most box edge).
          If the vertical axis is included, the third and the sixth number are the
          bottom and the top of the 3-dimensional bounding box.
          If a feature has multiple spatial geometry properties, it is the decision of the
          server whether only a single spatial geometry property is used to determine
          the extent or all relevant geometries.
        explode: false
        in: query
        name: bbox
        required: false
        schema:
          oneOf:
          - items:
              maxItems: 4
              minItems: 4
              type: object
            type: array
          - items:
              maxItems: 6
              minItems: 6
              type: object
            type: array
        style: form
      - description: "Define the vertical levels to return data from \n\nA range to\
          \ return data for all levels between and including 2 defined levels\n\n\
          i.e. z=minimum value/maximum value\n\nfor instance if all values between\
          \ and including 10m and 100m\n\nz=10/100\n\nA list of height values can\
          \ be specified\ni.e. z=value1,value2,value3\n\nfor instance if values at\
          \ 2m, 10m and 80m are required\n\nz=2,10,80\n\nAn Arithmetic sequence using\
          \ Recurring height intervals, the difference is the number of recurrences\
          \ is defined at the start \nand the amount to increment the height by is\
          \ defined at the end\n\ni.e. z=Rn/min height/height interval\n\nso if the\
          \ request was for 20 height levels 50m apart starting at 100m:\n\nz=R20/100/50\n\
          \nWhen not specified data from all available heights SHOULD be returned\n"
        in: query
        name: z
        required: false
        schema:
          type: string
      - description: |-
          Either a date-time or an interval, open or closed. Date and time expressions adhere to RFC 3339. Open intervals are expressed using double-dots.
          Examples:
          * A date-time: "2018-02-12T23:20:50Z" * A closed interval: "2018-02-12T00:00:00Z/2018-03-18T12:31:12Z" * Open intervals: "2018-02-12T00:00:00Z/.." or "../2018-03-18T12:31:12Z"
          Only features that have a temporal property that intersects the value of `datetime` are selected.
          If a feature has multiple temporal properties, it is the decision of the server whether only a single temporal property is used to determine the extent or all relevant temporal properties.
        explode: false
        in: query
        name: datetime
        required: false
        schema:
          type: string
        style: form
      - description: comma delimited list of parameters to retrieve data for.  Valid
          parameters are listed in the collections metadata
        in: query
        name: parameter-name
        required: false
        schema:
          type: string
      - description: identifier (id) of the coordinate system to return data in list
          of valid crs identifiers for the chosen collection are defined in the metadata
          responses.  If not supplied the coordinate reference system will default
          to WGS84.
        example: native
        in: query
        name: crs
        required: false
        schema:
          type: string
      - description: format to return the data response in
        in: query
        name: f
        required: false
        schema:
          type: string
      responses:
        "200":
          content:
            application/prs.coverage+json:
              schema:
                $ref: '#/components/schemas/coverageJSON'
            application/geo+json:
              schema:
                $ref: '#/components/schemas/edrFeatureCollectionGeoJSON'
            application/x-netcdf: {}
            text/xml: {}
          description: Data ranges required to construct valid queries for the choosen
            data collection
        "202":
          description: Data request still being processed
        "308":
          description: Request will take a significant time to process
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/exception'
            text/xml: {}
          description: Invalid request.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/exception'
            text/xml: {}
          description: Requested data not found.
        "413":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/exception'
            text/xml: {}
          description: Requested data volume to large to be handled by this service.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/exception'
            text/html:
              schema:
                type: string
          description: An error occured.
      summary: Query end point for Cube queries  of collection {collectionId} defined
        by a cube
      tags:
      - Collection data queries
      x-eov-operation-handler: controllers/CollectionDataQueriesController
  /collections/{collectionId}/trajectory:
    get:
      description: Return the data values for the data Polygon defined by the query
        parameters
      operationId: getDataForTrajectory
      parameters:
      - description: Identifier (id) of a specific collection
        in: path
        name: collectionId
        required: true
        schema:
          type: string
      - description: "Only data that has a geometry that intersects the area defined\
          \ by the linestring\nare selected. \n\nThe trajectory is defined using a\
          \ Well Known Text string following \n\nA 2D trajectory, on the surface of\
          \ earth with no time or height dimensions: \n    coords=LINESTRING(51.14\
          \ -2.98, 51.36 -2.87, 51.03 -3.15, 50.74 -3.48, 50.9 -3.36)\n\nA 2D trajectory,\
          \ on the surface of earth with all for the same time and no height dimension,\
          \ time value defined in ISO8601 format by the `datetime` query parameter\
          \ : \n    coords=LINESTRING(51.14 -2.98, 51.36 -2.87, 51.03 -3.15, 50.74\
          \ -3.48, 50.9 -3.36)&time=2018-02-12T23:00:00Z \n    \nA 2D trajectory,\
          \ on the surface of earth with no time value but at a fixed height level,\
          \ height defined in the collection height units by the `z` query parameter\
          \ : \n    coords=LINESTRING(51.14 -2.98, 51.36 -2.87, 51.03 -3.15, 50.74\
          \ -3.48, 50.9 -3.36)&z=850 \n\nA 2D trajectory, on the surface of earth\
          \ with all for the same time and at a fixed height level, time value defined\
          \ in ISO8601 format by the `datetime` query parameter and height defined\
          \ in the collection height units by the `z` query parameter : \n    coords=LINESTRING(51.14\
          \ -2.98, 51.36 -2.87, 51.03 -3.15, 50.74 -3.48, 50.9 -3.36)&time=2018-02-12T23:00:00Z&z=850\
          \ \n\nA 3D trajectory, on the surface of the earth but over a time range\
          \ with no height values:\ncoords=LINESTRINGM(51.14 -2.98 1560507000, 51.36\
          \ -2.87 1560507600, 51.03 -3.15 1560508200, 50.74 -3.48 1560508500, 50.9\
          \ -3.36 1560510240)\n\nA 3D trajectory, on the surface of the earth but\
          \ over a time range with a fixed height value, height defined in the collection\
          \ height units by the `z` query parameter : \ncoords=LINESTRINGM(51.14 -2.98\
          \ 1560507000, 51.36 -2.87 1560507600, 51.03 -3.15 1560508200, 50.74 -3.48\
          \ 1560508500, 50.9 -3.36 1560510240)&z=200\n\n\nA 3D trajectory, through\
          \ a 3D volume with height or depth, but no defined time:\ncoords=LINESTRINGZ(51.14\
          \ -2.98 0.1, 51.36 -2.87 0.2, 51.03 -3.15 0.3, 50.74 -3.48 0.4, 50.9 -3.36\
          \ 0.5)\n\nA 3D trajectory, through a 3D volume with height or depth, but\
          \ a fixed time time value defined in ISO8601 format by the `datetime` query\
          \ parameter:\ncoords=LINESTRINGZ(51.14 -2.98 0.1, 51.36 -2.87 0.2, 51.03\
          \ -3.15 0.3, 50.74 -3.48 0.4, 50.9 -3.36 0.5)&time=2018-02-12T23:00:00Z\n\
          \nA 4D trajectory, through a 3D volume but over a time range:\ncoords=LINESTRINGZM(51.14\
          \ -2.98 0.1 1560507000,51.36 -2.87 0.2 1560507600, 51.03 -3.15 0.3 1560508200,\
          \ 50.74 -3.48 0.4 1560508500, 50.9 -3.36 0.5 1560510240)\n(using either\
          \ the `time` or `z` parameters with a 4D trajectory wil generate an error\
          \ response)\n\nwhere Z in `LINESTRINGZ` and `LINESTRINGZM` refers to the\
          \ height value.  \n`If the specified CRS does not define the height units,\
          \ the heights units will default to metres above mean sea level`\n\nand\
          \ the M in `LINESTRINGM` and `LINESTRINGZM` refers to the number of seconds\
          \ that have elapsed since the Unix epoch, that is the time 00:00:00 UTC\
          \ on 1 January 1970. See\nhttps://en.wikipedia.org/wiki/Unix_time"
        in: query
        name: coords
        required: true
        schema:
          type: string
      - description: "Define the vertical level to return data from \ni.e. z=level\n\
          \nfor instance if the 850hPa pressure level is being queried\n\nz=850\n\n\
          or a range to return data for all levels between and including 2 defined\
          \ levels\ni.e. z=minimum value/maximum value\n\nfor instance if all values\
          \ between and including 10m and 100m\n\nz=10/100\n\nfinally a list of height\
          \ values can be specified\ni.e. z=value1,value2,value3\n\nfor instance if\
          \ values at 2m, 10m and 80m are required\n\nz=2,10,80\n\nAn Arithmetic sequence\
          \ using Recurring height intervals, the difference is the number of recurrences\
          \ is defined at the start \nand the amount to increment the height by is\
          \ defined at the end\n\ni.e. z=Rn/min height/height interval\n\nso if the\
          \ request was for 20 height levels 50m apart starting at 100m:\n\nz=R20/100/50\n\
          \nWhen not specified data from all available heights SHOULD be returned\n"
        in: query
        name: z
        required: false
        schema:
          type: string
      - description: |-
          Either a date-time or an interval, open or closed. Date and time expressions adhere to RFC 3339. Open intervals are expressed using double-dots.
          Examples:
          * A date-time: "2018-02-12T23:20:50Z" * A closed interval: "2018-02-12T00:00:00Z/2018-03-18T12:31:12Z" * Open intervals: "2018-02-12T00:00:00Z/.." or "../2018-03-18T12:31:12Z"
          Only features that have a temporal property that intersects the value of `datetime` are selected.
          If a feature has multiple temporal properties, it is the decision of the server whether only a single temporal property is used to determine the extent or all relevant temporal properties.
        explode: false
        in: query
        name: datetime
        required: false
        schema:
          type: string
        style: form
      - description: comma delimited list of parameters to retrieve data for.  Valid
          parameters are listed in the collections metadata
        in: query
        name: parameter-name
        required: false
        schema:
          type: string
      - description: identifier (id) of the coordinate system to return data in list
          of valid crs identifiers for the chosen collection are defined in the metadata
          responses.  If not supplied the coordinate reference system will default
          to WGS84.
        example: native
        in: query
        name: crs
        required: false
        schema:
          type: string
      - description: format to return the data response in
        in: query
        name: f
        required: false
        schema:
          type: string
      responses:
        "200":
          content:
            application/prs.coverage+json:
              schema:
                $ref: '#/components/schemas/coverageJSON'
            application/geo+json:
              schema:
                $ref: '#/components/schemas/edrFeatureCollectionGeoJSON'
            application/x-netcdf: {}
            text/xml: {}
          description: Data ranges required to construct valid queries for the choosen
            data collection
        "202":
          description: Data request still being processed
        "308":
          description: Request will take a significant time to process
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/exception'
            text/xml: {}
          description: Invalid request.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/exception'
            text/xml: {}
          description: Requested data not found.
        "413":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/exception'
            text/xml: {}
          description: Requested data volume to large to be handled by this service.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/exception'
            text/html:
              schema:
                type: string
          description: An error occured.
      summary: Query end point for trajectory queries  of collection {collectionId}
        defined by a wkt linestring and a iso8601 time period
      tags:
      - Collection data queries
      x-eov-operation-handler: controllers/CollectionDataQueriesController
  /collections/{collectionId}/items:
    get:
      description: List the items available in the collection accessible via a unique
        identifier
      operationId: listDataItems
      parameters:
      - description: Identifier (id) of a specific collection
        in: path
        name: collectionId
        required: true
        schema:
          type: string
      - description: |-
          Only features that have a geometry that intersects the bounding box are selected.
          The bounding box is provided as four or six numbers, depending on whether the
          coordinate reference system includes a vertical axis (height or depth):
          * Lower left corner, coordinate axis 1
          * Lower left corner, coordinate axis 2
          * Minimum value, coordinate axis 3 (optional)
          * Upper right corner, coordinate axis 1
          * Upper right corner, coordinate axis 2
          * Maximum value, coordinate axis 3 (optional)
          The coordinate reference system of the values is WGS 84 longitude/latitude
          (http://www.opengis.net/def/crs/OGC/1.3/CRS84) unless a different coordinate
          reference system is specified in the parameter `bbox-crs`.
          For WGS 84 longitude/latitude the values are in most cases the sequence of
          minimum longitude, minimum latitude, maximum longitude and maximum latitude.
          However, in cases where the box spans the antimeridian the first value
          (west-most box edge) is larger than the third value (east-most box edge).
          If the vertical axis is included, the third and the sixth number are the
          bottom and the top of the 3-dimensional bounding box.
          If a feature has multiple spatial geometry properties, it is the decision of the
          server whether only a single spatial geometry property is used to determine
          the extent or all relevant geometries.
        explode: false
        in: query
        name: bbox
        required: false
        schema:
          oneOf:
          - items:
              maxItems: 4
              minItems: 4
              type: object
            type: array
          - items:
              maxItems: 6
              minItems: 6
              type: object
            type: array
        style: form
      - description: |-
          Either a date-time or an interval, open or closed. Date and time expressions adhere to RFC 3339. Open intervals are expressed using double-dots.
          Examples:
          * A date-time: "2018-02-12T23:20:50Z" * A closed interval: "2018-02-12T00:00:00Z/2018-03-18T12:31:12Z" * Open intervals: "2018-02-12T00:00:00Z/.." or "../2018-03-18T12:31:12Z"
          Only features that have a temporal property that intersects the value of `datetime` are selected.
          If a feature has multiple temporal properties, it is the decision of the server whether only a single temporal property is used to determine the extent or all relevant temporal properties.
        explode: false
        in: query
        name: datetime
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/geo+json:
              schema:
                $ref: '#/components/schemas/edrFeatureCollectionGeoJSON'
            application/json: {}
            text/xml: {}
          description: List of pre-existing items available for retrieval
        "202":
          description: Data request still being processed
        "308":
          description: Request will take a significant time to process
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/exception'
            application/x-netcdf: {}
            text/xml: {}
          description: Requested data not found.
        "413":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/exception'
            application/x-netcdf: {}
            text/xml: {}
          description: Requested data volume to large to be handled by this service.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/exception'
            text/html:
              schema:
                type: string
          description: An error occured.
      summary: List available items
      tags:
      - Collection metadata
      x-eov-operation-handler: controllers/CollectionMetadataController
  /collections/{collectionId}/items/{itemId}:
    get:
      description: Query end point to retrieve data from collection {collectionId}
        using a unique identifier
      operationId: getDataForItem
      parameters:
      - description: Identifier (id) of a specific collection
        in: path
        name: collectionId
        required: true
        schema:
          type: string
      - description: Retrieve data from the collection using a unique identifier.
        in: path
        name: itemId
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json: {}
            text/xml: {}
          description: Data ranges required to construct valid queries for the choosen
            data collection
        "202":
          description: Data request still being processed
        "308":
          description: Request will take a significant time to process
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/exception'
            application/x-netcdf: {}
            text/xml: {}
          description: Requested data not found.
        "413":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/exception'
            application/x-netcdf: {}
            text/xml: {}
          description: Requested data volume to large to be handled by this service.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/exception'
            text/html:
              schema:
                type: string
          description: An error occured.
      summary: Return item {itemId} from collection {collectionId}
      tags:
      - Collection data queries
      x-eov-operation-handler: controllers/CollectionDataQueriesController
  /collections/{collectionId}/instances:
    get:
      description: This will provide list of the avalable instances of the collection
        Use content negotiation to request HTML or JSON.
      operationId: getCollectionInstances
      parameters:
      - description: Identifier (id) of a specific collection
        in: path
        name: collectionId
        required: true
        schema:
          type: string
      - description: format to return the data response in
        in: query
        name: f
        required: false
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/instances'
            text/html:
              schema:
                type: string
          description: Metadata about the instance of {collectionId} collection shared
            by this API.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/exception'
            text/html:
              schema:
                type: string
          description: An error occured.
      summary: List data instances of {collectionId}
      tags:
      - Collection metadata
      x-eov-operation-handler: controllers/CollectionMetadataController
  /collections/{collectionId}/instances/{instanceId}/position:
    get:
      description: Query end point for position queries
      operationId: getInstanceDataForPoint
      parameters:
      - description: Identifier (id) of a specific collection
        in: path
        name: collectionId
        required: true
        schema:
          type: string
      - description: Identifier (id) of a specific instance of a collection
        in: path
        name: instanceId
        required: true
        schema:
          type: string
      - description: "location(s) to return data for, the coordinates are defined\
          \ by a Well Known Text\n(wkt) string. to retrieve a single location :\n\n\
          POINT(x y) i.e. POINT(0 51.48) for Greenwich, London\n\nAnd for a list of\
          \ locations\n\nMULTIPOINT((x y),(x1 y1),(x2 y2),(x3 y3))\n\ni.e.\nMULTIPOINT((38.9\
          \ -77),(48.85 2.35),(39.92 116.38),(-35.29 149.1),(51.5 -0.1))\n\nsee http://portal.opengeospatial.org/files/?artifact_id=25355\
          \ and \nhttps://en.wikipedia.org/wiki/Well-known_text_representation_of_geometry\n\
          \nthe coordinate values will depend on the CRS parameter, if this is not\
          \ defined\nthe values will be assumed to WGS84 values (i.e x=longitude and\
          \ y=latitude)\n"
        in: query
        name: coords
        required: true
        schema:
          type: string
      - description: "Define the vertical level to return data from \ni.e. z=level\n\
          \nfor instance if the 850hPa pressure level is being queried\n\nz=850\n\n\
          or a range to return data for all levels between and including 2 defined\
          \ levels\ni.e. z=minimum value/maximum value\n\nfor instance if all values\
          \ between and including 10m and 100m\n\nz=10/100\n\nfinally a list of height\
          \ values can be specified\ni.e. z=value1,value2,value3\n\nfor instance if\
          \ values at 2m, 10m and 80m are required\n\nz=2,10,80\n\nAn Arithmetic sequence\
          \ using Recurring height intervals, the difference is the number of recurrences\
          \ is defined at the start \nand the amount to increment the height by is\
          \ defined at the end\n\ni.e. z=Rn/min height/height interval\n\nso if the\
          \ request was for 20 height levels 50m apart starting at 100m:\n\nz=R20/100/50\n\
          \nWhen not specified data from all available heights SHOULD be returned\n"
        in: query
        name: z
        required: false
        schema:
          type: string
      - description: |-
          Either a date-time or an interval, open or closed. Date and time expressions adhere to RFC 3339. Open intervals are expressed using double-dots.
          Examples:
          * A date-time: "2018-02-12T23:20:50Z" * A closed interval: "2018-02-12T00:00:00Z/2018-03-18T12:31:12Z" * Open intervals: "2018-02-12T00:00:00Z/.." or "../2018-03-18T12:31:12Z"
          Only features that have a temporal property that intersects the value of `datetime` are selected.
          If a feature has multiple temporal properties, it is the decision of the server whether only a single temporal property is used to determine the extent or all relevant temporal properties.
        explode: false
        in: query
        name: datetime
        required: false
        schema:
          type: string
        style: form
      - description: comma delimited list of parameters to retrieve data for.  Valid
          parameters are listed in the collections metadata
        in: query
        name: parameter-name
        required: false
        schema:
          type: string
      - description: identifier (id) of the coordinate system to return data in list
          of valid crs identifiers for the chosen collection are defined in the metadata
          responses.  If not supplied the coordinate reference system will default
          to WGS84.
        example: native
        in: query
        name: crs
        required: false
        schema:
          type: string
      - description: format to return the data response in
        in: query
        name: f
        required: false
        schema:
          type: string
      responses:
        "200":
          content:
            application/prs.coverage+json:
              schema:
                $ref: '#/components/schemas/coverageJSON'
            application/geo+json:
              schema:
                $ref: '#/components/schemas/edrFeatureCollectionGeoJSON'
            application/x-netcdf: {}
            text/xml: {}
          description: Data ranges required to construct valid queries for the choosen
            data collection
        "202":
          description: Data request still being processed
        "308":
          description: Request will take a significant time to process
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/exception'
            text/xml: {}
          description: Invalid request.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/exception'
            text/xml: {}
          description: Requested data not found.
        "413":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/exception'
            text/xml: {}
          description: Requested data volume to large to be handled by this service.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/exception'
            text/html:
              schema:
                type: string
          description: An error occured.
      summary: Query end point for position queries of instance {instanceId} of collection
        {collectionId}
      tags:
      - Instance data queries
      x-eov-operation-handler: controllers/InstanceDataQueriesController
  /collections/{collectionId}/instances/{instanceId}/radius:
    get:
      description: Query end point to return all data within a defined radius of the
        defined point location queries
      operationId: getInstanceDataForRadius
      parameters:
      - description: Identifier (id) of a specific collection
        in: path
        name: collectionId
        required: true
        schema:
          type: string
      - description: Identifier (id) of a specific instance of a collection
        in: path
        name: instanceId
        required: true
        schema:
          type: string
      - description: "location(s) to return data for, the coordinates are defined\
          \ by a Well Known Text\n(wkt) string. to retrieve a single location :\n\n\
          POINT(x y) i.e. POINT(0 51.48) for Greenwich, London\n\nsee http://portal.opengeospatial.org/files/?artifact_id=25355\
          \ and \nhttps://en.wikipedia.org/wiki/Well-known_text_representation_of_geometry\n\
          \nthe coordinate values will depend on the CRS parameter, if this is not\
          \ defined\nthe values will be assumed to WGS84 values (i.e x=longitude and\
          \ y=latitude)\n"
        in: query
        name: coords
        required: true
        schema:
          type: string
      - description: "Define the vertical level to return data from \ni.e. z=level\n\
          \nfor instance if the 850hPa pressure level is being queried\n\nz=850\n\n\
          or a range to return data for all levels between and including 2 defined\
          \ levels\ni.e. z=minimum value/maximum value\n\nfor instance if all values\
          \ between and including 10m and 100m\n\nz=10/100\n\nfinally a list of height\
          \ values can be specified\ni.e. z=value1,value2,value3\n\nfor instance if\
          \ values at 2m, 10m and 80m are required\n\nz=2,10,80\n\nAn Arithmetic sequence\
          \ using Recurring height intervals, the difference is the number of recurrences\
          \ is defined at the start \nand the amount to increment the height by is\
          \ defined at the end\n\ni.e. z=Rn/min height/height interval\n\nso if the\
          \ request was for 20 height levels 50m apart starting at 100m:\n\nz=R20/100/50\n\
          \nWhen not specified data from all available heights SHOULD be returned\n"
        in: query
        name: z
        required: false
        schema:
          type: string
      - description: |-
          Either a date-time or an interval, open or closed. Date and time expressions adhere to RFC 3339. Open intervals are expressed using double-dots.
          Examples:
          * A date-time: "2018-02-12T23:20:50Z" * A closed interval: "2018-02-12T00:00:00Z/2018-03-18T12:31:12Z" * Open intervals: "2018-02-12T00:00:00Z/.." or "../2018-03-18T12:31:12Z"
          Only features that have a temporal property that intersects the value of `datetime` are selected.
          If a feature has multiple temporal properties, it is the decision of the server whether only a single temporal property is used to determine the extent or all relevant temporal properties.
        explode: false
        in: query
        name: datetime
        required: false
        schema:
          type: string
        style: form
      - description: Defines radius of area around defined coordinates to include
          in the data selection
        example: 10
        in: query
        name: within
        required: true
        schema:
          type: number
      - description: Distance units for the within parameter
        example: KM
        in: query
        name: withinUnits
        required: true
        schema:
          type: string
      - description: comma delimited list of parameters to retrieve data for.  Valid
          parameters are listed in the collections metadata
        in: query
        name: parameter-name
        required: false
        schema:
          type: string
      - description: identifier (id) of the coordinate system to return data in list
          of valid crs identifiers for the chosen collection are defined in the metadata
          responses.  If not supplied the coordinate reference system will default
          to WGS84.
        example: native
        in: query
        name: crs
        required: false
        schema:
          type: string
      - description: format to return the data response in
        in: query
        name: f
        required: false
        schema:
          type: string
      responses:
        "200":
          content:
            application/prs.coverage+json:
              schema:
                $ref: '#/components/schemas/coverageJSON'
            application/geo+json:
              schema:
                $ref: '#/components/schemas/edrFeatureCollectionGeoJSON'
            application/x-netcdf: {}
            text/xml: {}
          description: Data ranges required to construct valid queries for the choosen
            data collection
        "202":
          description: Data request still being processed
        "308":
          description: Request will take a significant time to process
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/exception'
            text/xml: {}
          description: Invalid request.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/exception'
            text/xml: {}
          description: Requested data not found.
        "413":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/exception'
            text/xml: {}
          description: Requested data volume to large to be handled by this service.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/exception'
            text/html:
              schema:
                type: string
          description: An error occured.
      summary: Query end point to return data within defined radius of a point for
        an instance {instanceId} of collection {collectionId}
      tags:
      - Instance data queries
      x-eov-operation-handler: controllers/InstanceDataQueriesController
  /collections/{collectionId}/instances/{instanceId}/area:
    get:
      description: Return the data values for the data area defined by the query parameters
      operationId: getInstanceDataForArea
      parameters:
      - description: Identifier (id) of a specific collection
        in: path
        name: collectionId
        required: true
        schema:
          type: string
      - description: Identifier (id) of a specific instance of a collection
        in: path
        name: instanceId
        required: true
        schema:
          type: string
      - description: "Only data that has a geometry that intersects the area defined\
          \ by the polygon\nare selected. \n\nThe polygon is defined using a Well\
          \ Known Text string following \n\ncoords=POLYGON((x y,x1 y1,x2 y2,...,xn\
          \ yn x y))\n\nwhich are values in the coordinate system defined by the crs\
          \ query parameter \n(if crs is not defined the values will be assumed to\
          \ be WGS84 longitude/latitude coordinates).  \n\nFor instance a polygon\
          \ that roughly describes an area that contains \nSouth West England in WGS84\
          \ would look like: \n\ncoords=POLYGON((-6.1 50.3,-4.35 51.4,-2.6 51.6,-2.8\
          \ 50.6,-5.3 49.9,-6.1,50.3))\n\nsee http://portal.opengeospatial.org/files/?artifact_id=25355\
          \ and \nhttps://en.wikipedia.org/wiki/Well-known_text_representation_of_geometry\n\
          \nThe coords parameter will only support 2D POLYGON definitions"
        in: query
        name: coords
        required: true
        schema:
          type: string
      - description: "Define the vertical level to return data from \ni.e. z=level\n\
          \nfor instance if the 850hPa pressure level is being queried\n\nz=850\n\n\
          or a range to return data for all levels between and including 2 defined\
          \ levels\ni.e. z=minimum value/maximum value\n\nfor instance if all values\
          \ between and including 10m and 100m\n\nz=10/100\n\nfinally a list of height\
          \ values can be specified\ni.e. z=value1,value2,value3\n\nfor instance if\
          \ values at 2m, 10m and 80m are required\n\nz=2,10,80\n\nAn Arithmetic sequence\
          \ using Recurring height intervals, the difference is the number of recurrences\
          \ is defined at the start \nand the amount to increment the height by is\
          \ defined at the end\n\ni.e. z=Rn/min height/height interval\n\nso if the\
          \ request was for 20 height levels 50m apart starting at 100m:\n\nz=R20/100/50\n\
          \nWhen not specified data from all available heights SHOULD be returned\n"
        in: query
        name: z
        required: false
        schema:
          type: string
      - description: |-
          Either a date-time or an interval, open or closed. Date and time expressions adhere to RFC 3339. Open intervals are expressed using double-dots.
          Examples:
          * A date-time: "2018-02-12T23:20:50Z" * A closed interval: "2018-02-12T00:00:00Z/2018-03-18T12:31:12Z" * Open intervals: "2018-02-12T00:00:00Z/.." or "../2018-03-18T12:31:12Z"
          Only features that have a temporal property that intersects the value of `datetime` are selected.
          If a feature has multiple temporal properties, it is the decision of the server whether only a single temporal property is used to determine the extent or all relevant temporal properties.
        explode: false
        in: query
        name: datetime
        required: false
        schema:
          type: string
        style: form
      - description: comma delimited list of parameters to retrieve data for.  Valid
          parameters are listed in the collections metadata
        in: query
        name: parameter-name
        required: false
        schema:
          type: string
      - description: "Defined it the user requires data at a different resolution\
          \ from the native resolution of the data along the x-axis\n\nIf this is\
          \ a single value it denotes the number of intervals to retrieve data for\
          \ along the x-axis\n  \n  i.e. resolution-x=10 \n  \nwould retrieve 10 values\
          \ along the x-axis from the minimum x coordinate to maximum x coordinate\
          \ (i.e. a value at both the minimum x and maximum x coordinates and 8 values\
          \ between).\n"
        in: query
        name: resolution-x
        required: false
        schema:
          type: object
      - description: "Defined it the user requires data at a different resolution\
          \ from the native resolution of the data along the y-axis\n\nIf this is\
          \ a single value it denotes the number of intervals to retrieve data for\
          \ along the y-axis\n  \n  i.e. resolution-y=10 \n  \nwould retrieve 10 values\
          \ along the y-axis from the minimum y coordinate to maximum y coordinate\
          \ (i.e. a value at both the minimum y and maximum y coordinates and 8 values\
          \ between).\n"
        in: query
        name: resolution-y
        required: false
        schema:
          type: object
      - description: identifier (id) of the coordinate system to return data in list
          of valid crs identifiers for the chosen collection are defined in the metadata
          responses.  If not supplied the coordinate reference system will default
          to WGS84.
        example: native
        in: query
        name: crs
        required: false
        schema:
          type: string
      - description: format to return the data response in
        in: query
        name: f
        required: false
        schema:
          type: string
      responses:
        "200":
          content:
            application/prs.coverage+json:
              schema:
                $ref: '#/components/schemas/coverageJSON'
            application/geo+json:
              schema:
                $ref: '#/components/schemas/edrFeatureCollectionGeoJSON'
            application/x-netcdf: {}
            text/xml: {}
          description: Data ranges required to construct valid queries for the choosen
            data collection
        "202":
          description: Data request still being processed
        "308":
          description: Request will take a significant time to process
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/exception'
            text/xml: {}
          description: Invalid request.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/exception'
            text/xml: {}
          description: Requested data not found.
        "413":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/exception'
            text/xml: {}
          description: Requested data volume to large to be handled by this service.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/exception'
            text/html:
              schema:
                type: string
          description: An error occured.
      summary: Query end point for area queries of instance {instanceId} of collection
        {collectionId} defined by a polygon
      tags:
      - Instance data queries
      x-eov-operation-handler: controllers/InstanceDataQueriesController
  /collections/{collectionId}/instances/{instanceId}/cube:
    get:
      description: Return the data values for the data Cube defined by the query parameters
      operationId: getInstanceDataForCube
      parameters:
      - description: Identifier (id) of a specific collection
        in: path
        name: collectionId
        required: true
        schema:
          type: string
      - description: Identifier (id) of a specific instance of a collection
        in: path
        name: instanceId
        required: true
        schema:
          type: string
      - description: |-
          Only features that have a geometry that intersects the bounding box are selected.
          The bounding box is provided as four or six numbers, depending on whether the
          coordinate reference system includes a vertical axis (height or depth):
          * Lower left corner, coordinate axis 1
          * Lower left corner, coordinate axis 2
          * Minimum value, coordinate axis 3 (optional)
          * Upper right corner, coordinate axis 1
          * Upper right corner, coordinate axis 2
          * Maximum value, coordinate axis 3 (optional)
          The coordinate reference system of the values is WGS 84 longitude/latitude
          (http://www.opengis.net/def/crs/OGC/1.3/CRS84) unless a different coordinate
          reference system is specified in the parameter `bbox-crs`.
          For WGS 84 longitude/latitude the values are in most cases the sequence of
          minimum longitude, minimum latitude, maximum longitude and maximum latitude.
          However, in cases where the box spans the antimeridian the first value
          (west-most box edge) is larger than the third value (east-most box edge).
          If the vertical axis is included, the third and the sixth number are the
          bottom and the top of the 3-dimensional bounding box.
          If a feature has multiple spatial geometry properties, it is the decision of the
          server whether only a single spatial geometry property is used to determine
          the extent or all relevant geometries.
        explode: false
        in: query
        name: bbox
        required: false
        schema:
          oneOf:
          - items:
              maxItems: 4
              minItems: 4
              type: object
            type: array
          - items:
              maxItems: 6
              minItems: 6
              type: object
            type: array
        style: form
      - description: "Define the vertical levels to return data from \n\nA range to\
          \ return data for all levels between and including 2 defined levels\n\n\
          i.e. z=minimum value/maximum value\n\nfor instance if all values between\
          \ and including 10m and 100m\n\nz=10/100\n\nA list of height values can\
          \ be specified\ni.e. z=value1,value2,value3\n\nfor instance if values at\
          \ 2m, 10m and 80m are required\n\nz=2,10,80\n\nAn Arithmetic sequence using\
          \ Recurring height intervals, the difference is the number of recurrences\
          \ is defined at the start \nand the amount to increment the height by is\
          \ defined at the end\n\ni.e. z=Rn/min height/height interval\n\nso if the\
          \ request was for 20 height levels 50m apart starting at 100m:\n\nz=R20/100/50\n\
          \nWhen not specified data from all available heights SHOULD be returned\n"
        in: query
        name: z
        required: false
        schema:
          type: string
      - description: |-
          Either a date-time or an interval, open or closed. Date and time expressions adhere to RFC 3339. Open intervals are expressed using double-dots.
          Examples:
          * A date-time: "2018-02-12T23:20:50Z" * A closed interval: "2018-02-12T00:00:00Z/2018-03-18T12:31:12Z" * Open intervals: "2018-02-12T00:00:00Z/.." or "../2018-03-18T12:31:12Z"
          Only features that have a temporal property that intersects the value of `datetime` are selected.
          If a feature has multiple temporal properties, it is the decision of the server whether only a single temporal property is used to determine the extent or all relevant temporal properties.
        explode: false
        in: query
        name: datetime
        required: false
        schema:
          type: string
        style: form
      - description: comma delimited list of parameters to retrieve data for.  Valid
          parameters are listed in the collections metadata
        in: query
        name: parameter-name
        required: false
        schema:
          type: string
      - description: identifier (id) of the coordinate system to return data in list
          of valid crs identifiers for the chosen collection are defined in the metadata
          responses.  If not supplied the coordinate reference system will default
          to WGS84.
        example: native
        in: query
        name: crs
        required: false
        schema:
          type: string
      - description: format to return the data response in
        in: query
        name: f
        required: false
        schema:
          type: string
      responses:
        "200":
          content:
            application/prs.coverage+json:
              schema:
                $ref: '#/components/schemas/coverageJSON'
            application/geo+json:
              schema:
                $ref: '#/components/schemas/edrFeatureCollectionGeoJSON'
            application/x-netcdf: {}
            text/xml: {}
          description: Data ranges required to construct valid queries for the choosen
            data collection
        "202":
          description: Data request still being processed
        "308":
          description: Request will take a significant time to process
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/exception'
            text/xml: {}
          description: Invalid request.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/exception'
            text/xml: {}
          description: Requested data not found.
        "413":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/exception'
            text/xml: {}
          description: Requested data volume to large to be handled by this service.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/exception'
            text/html:
              schema:
                type: string
          description: An error occured.
      summary: Query end point for Cube queries of instance {instanceId} of collection
        {collectionId} defined by a cube
      tags:
      - Instance data queries
      x-eov-operation-handler: controllers/InstanceDataQueriesController
  /collections/{collectionId}/instances/{instanceId}/trajectory:
    get:
      description: Return the data values for the data Polygon defined by the query
        parameters
      operationId: getInstanceDataForTrajectory
      parameters:
      - description: Identifier (id) of a specific collection
        in: path
        name: collectionId
        required: true
        schema:
          type: string
      - description: Identifier (id) of a specific instance of a collection
        in: path
        name: instanceId
        required: true
        schema:
          type: string
      - description: "Only data that has a geometry that intersects the area defined\
          \ by the linestring\nare selected. \n\nThe trajectory is defined using a\
          \ Well Known Text string following \n\nA 2D trajectory, on the surface of\
          \ earth with no time or height dimensions: \n    coords=LINESTRING(51.14\
          \ -2.98, 51.36 -2.87, 51.03 -3.15, 50.74 -3.48, 50.9 -3.36)\n\nA 2D trajectory,\
          \ on the surface of earth with all for the same time and no height dimension,\
          \ time value defined in ISO8601 format by the `datetime` query parameter\
          \ : \n    coords=LINESTRING(51.14 -2.98, 51.36 -2.87, 51.03 -3.15, 50.74\
          \ -3.48, 50.9 -3.36)&time=2018-02-12T23:00:00Z \n    \nA 2D trajectory,\
          \ on the surface of earth with no time value but at a fixed height level,\
          \ height defined in the collection height units by the `z` query parameter\
          \ : \n    coords=LINESTRING(51.14 -2.98, 51.36 -2.87, 51.03 -3.15, 50.74\
          \ -3.48, 50.9 -3.36)&z=850 \n\nA 2D trajectory, on the surface of earth\
          \ with all for the same time and at a fixed height level, time value defined\
          \ in ISO8601 format by the `datetime` query parameter and height defined\
          \ in the collection height units by the `z` query parameter : \n    coords=LINESTRING(51.14\
          \ -2.98, 51.36 -2.87, 51.03 -3.15, 50.74 -3.48, 50.9 -3.36)&time=2018-02-12T23:00:00Z&z=850\
          \ \n\nA 3D trajectory, on the surface of the earth but over a time range\
          \ with no height values:\ncoords=LINESTRINGM(51.14 -2.98 1560507000, 51.36\
          \ -2.87 1560507600, 51.03 -3.15 1560508200, 50.74 -3.48 1560508500, 50.9\
          \ -3.36 1560510240)\n\nA 3D trajectory, on the surface of the earth but\
          \ over a time range with a fixed height value, height defined in the collection\
          \ height units by the `z` query parameter : \ncoords=LINESTRINGM(51.14 -2.98\
          \ 1560507000, 51.36 -2.87 1560507600, 51.03 -3.15 1560508200, 50.74 -3.48\
          \ 1560508500, 50.9 -3.36 1560510240)&z=200\n\n\nA 3D trajectory, through\
          \ a 3D volume with height or depth, but no defined time:\ncoords=LINESTRINGZ(51.14\
          \ -2.98 0.1, 51.36 -2.87 0.2, 51.03 -3.15 0.3, 50.74 -3.48 0.4, 50.9 -3.36\
          \ 0.5)\n\nA 3D trajectory, through a 3D volume with height or depth, but\
          \ a fixed time time value defined in ISO8601 format by the `datetime` query\
          \ parameter:\ncoords=LINESTRINGZ(51.14 -2.98 0.1, 51.36 -2.87 0.2, 51.03\
          \ -3.15 0.3, 50.74 -3.48 0.4, 50.9 -3.36 0.5)&time=2018-02-12T23:00:00Z\n\
          \nA 4D trajectory, through a 3D volume but over a time range:\ncoords=LINESTRINGZM(51.14\
          \ -2.98 0.1 1560507000,51.36 -2.87 0.2 1560507600, 51.03 -3.15 0.3 1560508200,\
          \ 50.74 -3.48 0.4 1560508500, 50.9 -3.36 0.5 1560510240)\n(using either\
          \ the `time` or `z` parameters with a 4D trajectory wil generate an error\
          \ response)\n\nwhere Z in `LINESTRINGZ` and `LINESTRINGZM` refers to the\
          \ height value.  \n`If the specified CRS does not define the height units,\
          \ the heights units will default to metres above mean sea level`\n\nand\
          \ the M in `LINESTRINGM` and `LINESTRINGZM` refers to the number of seconds\
          \ that have elapsed since the Unix epoch, that is the time 00:00:00 UTC\
          \ on 1 January 1970. See\nhttps://en.wikipedia.org/wiki/Unix_time"
        in: query
        name: coords
        required: true
        schema:
          type: string
      - description: "Define the vertical level to return data from \ni.e. z=level\n\
          \nfor instance if the 850hPa pressure level is being queried\n\nz=850\n\n\
          or a range to return data for all levels between and including 2 defined\
          \ levels\ni.e. z=minimum value/maximum value\n\nfor instance if all values\
          \ between and including 10m and 100m\n\nz=10/100\n\nfinally a list of height\
          \ values can be specified\ni.e. z=value1,value2,value3\n\nfor instance if\
          \ values at 2m, 10m and 80m are required\n\nz=2,10,80\n\nAn Arithmetic sequence\
          \ using Recurring height intervals, the difference is the number of recurrences\
          \ is defined at the start \nand the amount to increment the height by is\
          \ defined at the end\n\ni.e. z=Rn/min height/height interval\n\nso if the\
          \ request was for 20 height levels 50m apart starting at 100m:\n\nz=R20/100/50\n\
          \nWhen not specified data from all available heights SHOULD be returned\n"
        in: query
        name: z
        required: false
        schema:
          type: string
      - description: |-
          Either a date-time or an interval, open or closed. Date and time expressions adhere to RFC 3339. Open intervals are expressed using double-dots.
          Examples:
          * A date-time: "2018-02-12T23:20:50Z" * A closed interval: "2018-02-12T00:00:00Z/2018-03-18T12:31:12Z" * Open intervals: "2018-02-12T00:00:00Z/.." or "../2018-03-18T12:31:12Z"
          Only features that have a temporal property that intersects the value of `datetime` are selected.
          If a feature has multiple temporal properties, it is the decision of the server whether only a single temporal property is used to determine the extent or all relevant temporal properties.
        explode: false
        in: query
        name: datetime
        required: false
        schema:
          type: string
        style: form
      - description: comma delimited list of parameters to retrieve data for.  Valid
          parameters are listed in the collections metadata
        in: query
        name: parameter-name
        required: false
        schema:
          type: string
      - description: identifier (id) of the coordinate system to return data in list
          of valid crs identifiers for the chosen collection are defined in the metadata
          responses.  If not supplied the coordinate reference system will default
          to WGS84.
        example: native
        in: query
        name: crs
        required: false
        schema:
          type: string
      - description: format to return the data response in
        in: query
        name: f
        required: false
        schema:
          type: string
      responses:
        "200":
          content:
            application/prs.coverage+json:
              schema:
                $ref: '#/components/schemas/coverageJSON'
            application/geo+json:
              schema:
                $ref: '#/components/schemas/edrFeatureCollectionGeoJSON'
            application/x-netcdf: {}
            text/xml: {}
          description: Data ranges required to construct valid queries for the choosen
            data collection
        "202":
          description: Data request still being processed
        "308":
          description: Request will take a significant time to process
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/exception'
            text/xml: {}
          description: Invalid request.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/exception'
            text/xml: {}
          description: Requested data not found.
        "413":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/exception'
            text/xml: {}
          description: Requested data volume to large to be handled by this service.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/exception'
            text/html:
              schema:
                type: string
          description: An error occured.
      summary: Query end point for trajectory queries of instance {instanceId} of
        collection {collectionId} defined by a wkt linestring and a iso8601 time period
      tags:
      - Instance data queries
      x-eov-operation-handler: controllers/InstanceDataQueriesController
  /collections/{collectionId}/instances/{instanceId}/corridor:
    get:
      description: Return the data values for the Corridor defined by the query parameters
      operationId: getInstanceDataForCorridor
      parameters:
      - description: Identifier (id) of a specific collection
        in: path
        name: collectionId
        required: true
        schema:
          type: string
      - description: Identifier (id) of a specific instance of a collection
        in: path
        name: instanceId
        required: true
        schema:
          type: string
      - description: "Only data that has a geometry that intersects the area defined\
          \ by the linestring\nare selected. \n\nThe trajectory is defined using a\
          \ Well Known Text string following \n\nA 2D trajectory, on the surface of\
          \ earth with no time or height dimensions: \n    coords=LINESTRING(51.14\
          \ -2.98, 51.36 -2.87, 51.03 -3.15, 50.74 -3.48, 50.9 -3.36)\n\nA 2D trajectory,\
          \ on the surface of earth with all for the same time and no height dimension,\
          \ time value defined in ISO8601 format by the `datetime` query parameter\
          \ : \n    coords=LINESTRING(51.14 -2.98, 51.36 -2.87, 51.03 -3.15, 50.74\
          \ -3.48, 50.9 -3.36)&time=2018-02-12T23:00:00Z \n    \nA 2D trajectory,\
          \ on the surface of earth with no time value but at a fixed height level,\
          \ height defined in the collection height units by the `z` query parameter\
          \ : \n    coords=LINESTRING(51.14 -2.98, 51.36 -2.87, 51.03 -3.15, 50.74\
          \ -3.48, 50.9 -3.36)&z=850 \n\nA 2D trajectory, on the surface of earth\
          \ with all for the same time and at a fixed height level, time value defined\
          \ in ISO8601 format by the `datetime` query parameter and height defined\
          \ in the collection height units by the `z` query parameter : \n    coords=LINESTRING(51.14\
          \ -2.98, 51.36 -2.87, 51.03 -3.15, 50.74 -3.48, 50.9 -3.36)&time=2018-02-12T23:00:00Z&z=850\
          \ \n\nA 3D trajectory, on the surface of the earth but over a time range\
          \ with no height values:\ncoords=LINESTRINGM(51.14 -2.98 1560507000, 51.36\
          \ -2.87 1560507600, 51.03 -3.15 1560508200, 50.74 -3.48 1560508500, 50.9\
          \ -3.36 1560510240)\n\nA 3D trajectory, on the surface of the earth but\
          \ over a time range with a fixed height value, height defined in the collection\
          \ height units by the `z` query parameter : \ncoords=LINESTRINGM(51.14 -2.98\
          \ 1560507000, 51.36 -2.87 1560507600, 51.03 -3.15 1560508200, 50.74 -3.48\
          \ 1560508500, 50.9 -3.36 1560510240)&z=200\n\n\nA 3D trajectory, through\
          \ a 3D volume with height or depth, but no defined time:\ncoords=LINESTRINGZ(51.14\
          \ -2.98 0.1, 51.36 -2.87 0.2, 51.03 -3.15 0.3, 50.74 -3.48 0.4, 50.9 -3.36\
          \ 0.5)\n\nA 3D trajectory, through a 3D volume with height or depth, but\
          \ a fixed time time value defined in ISO8601 format by the `datetime` query\
          \ parameter:\ncoords=LINESTRINGZ(51.14 -2.98 0.1, 51.36 -2.87 0.2, 51.03\
          \ -3.15 0.3, 50.74 -3.48 0.4, 50.9 -3.36 0.5)&time=2018-02-12T23:00:00Z\n\
          \nA 4D trajectory, through a 3D volume but over a time range:\ncoords=LINESTRINGZM(51.14\
          \ -2.98 0.1 1560507000,51.36 -2.87 0.2 1560507600, 51.03 -3.15 0.3 1560508200,\
          \ 50.74 -3.48 0.4 1560508500, 50.9 -3.36 0.5 1560510240)\n(using either\
          \ the `time` or `z` parameters with a 4D trajectory wil generate an error\
          \ response)\n\nwhere Z in `LINESTRINGZ` and `LINESTRINGZM` refers to the\
          \ height value.  \n`If the specified CRS does not define the height units,\
          \ the heights units will default to metres above mean sea level`\n\nand\
          \ the M in `LINESTRINGM` and `LINESTRINGZM` refers to the number of seconds\
          \ that have elapsed since the Unix epoch, that is the time 00:00:00 UTC\
          \ on 1 January 1970. See\nhttps://en.wikipedia.org/wiki/Unix_time"
        in: query
        name: coords
        required: true
        schema:
          type: string
      - description: "Define the vertical level to return data from \ni.e. z=level\n\
          \nfor instance if the 850hPa pressure level is being queried\n\nz=850\n\n\
          or a range to return data for all levels between and including 2 defined\
          \ levels\ni.e. z=minimum value/maximum value\n\nfor instance if all values\
          \ between and including 10m and 100m\n\nz=10/100\n\nfinally a list of height\
          \ values can be specified\ni.e. z=value1,value2,value3\n\nfor instance if\
          \ values at 2m, 10m and 80m are required\n\nz=2,10,80\n\nAn Arithmetic sequence\
          \ using Recurring height intervals, the difference is the number of recurrences\
          \ is defined at the start \nand the amount to increment the height by is\
          \ defined at the end\n\ni.e. z=Rn/min height/height interval\n\nso if the\
          \ request was for 20 height levels 50m apart starting at 100m:\n\nz=R20/100/50\n\
          \nWhen not specified data from all available heights SHOULD be returned\n"
        in: query
        name: z
        required: false
        schema:
          type: string
      - description: |-
          Either a date-time or an interval, open or closed. Date and time expressions adhere to RFC 3339. Open intervals are expressed using double-dots.
          Examples:
          * A date-time: "2018-02-12T23:20:50Z" * A closed interval: "2018-02-12T00:00:00Z/2018-03-18T12:31:12Z" * Open intervals: "2018-02-12T00:00:00Z/.." or "../2018-03-18T12:31:12Z"
          Only features that have a temporal property that intersects the value of `datetime` are selected.
          If a feature has multiple temporal properties, it is the decision of the server whether only a single temporal property is used to determine the extent or all relevant temporal properties.
        explode: false
        in: query
        name: datetime
        required: false
        schema:
          type: string
        style: form
      - description: comma delimited list of parameters to retrieve data for.  Valid
          parameters are listed in the collections metadata
        in: query
        name: parameter-name
        required: false
        schema:
          type: string
      - description: "width of the corridor\n\nThe width value represents the whole\
          \ width of the corridor where\nthe trajectory supplied in the `coords` query\
          \ parameter is the centre\npoint of the corridor\n\n`corridor-width={width}`\n\
          \ne.g.  corridor-width=100\n\nWould be a request for a corridor 100 units\
          \ wide with the coords parameter values being the centre point of the requested\
          \ corridor, \nthe request would be for data values 50 units either side\
          \ of the trajectory coordinates defined in the coords parameter. \n\nThe\
          \ width units supported by the collection will be provided in the API metadata\
          \ responses\n"
        in: query
        name: corridor-width
        required: true
        schema:
          type: string
      - description: Distance units for the corridor-width parameter
        example: KM
        in: query
        name: width-units
        required: true
        schema:
          type: string
      - description: "height of the corridor\n\nThe height value represents the whole\
          \ height of the corridor where\nthe trajectory supplied in the `coords`\
          \ query parameter is the centre\npoint of the corridor\n\n`corridor-height={height}`\n\
          \ne.g.  corridor-height=100\n\nWould be a request for a corridor 100 units\
          \ high with the coords parameter values being the centre point of the requested\
          \ corridor, \nthe request would be for data values 50 units either side\
          \ of the trajectory coordinates defined in the coords parameter. \n\nThe\
          \ height units supported by the collection will be provided in the API metadata\
          \ responses\n"
        in: query
        name: corridor-height
        required: true
        schema:
          type: string
      - description: Distance units for the corridor-height parameter
        example: KM
        in: query
        name: height-units
        required: true
        schema:
          type: string
      - description: "Defined it the user requires data at a different resolution\
          \ from the native resolution of the data along the x-axis\n\nIf this is\
          \ a single value it denotes the number of intervals to retrieve data for\
          \ along the x-axis\n  \n  i.e. resolution-x=10 \n  \nwould retrieve 10 values\
          \ along the x-axis from the minimum x coordinate to maximum x coordinate\
          \ (i.e. a value at both the minimum x and maximum x coordinates and 8 values\
          \ between).\n"
        in: query
        name: resolution-x
        required: false
        schema:
          type: object
      - description: "Defined it the user requires data at a different resolution\
          \ from the native resolution of the data along the z-axis\n\nIf this is\
          \ a single value it denotes the number of intervals to retrieve data for\
          \ along the z-axis\n  \n  i.e. resolution-z=10 \n  \nwould retrieve 10 values\
          \ along the z-axis from the minimum z coordinate to maximum z  coordinate\
          \ (i.e. a value at both the minimum z and maximum z coordinates and 8 values\
          \ between).\n"
        in: query
        name: resolution-z
        required: false
        schema:
          type: object
      - description: identifier (id) of the coordinate system to return data in list
          of valid crs identifiers for the chosen collection are defined in the metadata
          responses.  If not supplied the coordinate reference system will default
          to WGS84.
        example: native
        in: query
        name: crs
        required: false
        schema:
          type: string
      - description: format to return the data response in
        in: query
        name: f
        required: false
        schema:
          type: string
      responses:
        "200":
          content:
            application/prs.coverage+json:
              schema:
                $ref: '#/components/schemas/coverageJSON'
            application/geo+json:
              schema:
                $ref: '#/components/schemas/edrFeatureCollectionGeoJSON'
            application/x-netcdf: {}
            text/xml: {}
          description: Data ranges required to construct valid queries for the choosen
            data collection
        "202":
          description: Data request still being processed
        "308":
          description: Request will take a significant time to process
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/exception'
            text/xml: {}
          description: Invalid request.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/exception'
            text/xml: {}
          description: Requested data not found.
        "413":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/exception'
            text/xml: {}
          description: Requested data volume to large to be handled by this service.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/exception'
            text/html:
              schema:
                type: string
          description: An error occured.
      summary: Query end point for Corridor queries of instance {instanceId} of collection
        {collectionId} defined by a polygon
      tags:
      - Instance data queries
      x-eov-operation-handler: controllers/InstanceDataQueriesController
  /collections/{collectionId}/locations:
    get:
      description: List the locations available for the collection
      operationId: listCollectionDataLocations
      parameters:
      - description: Identifier (id) of a specific collection
        in: path
        name: collectionId
        required: true
        schema:
          type: string
      - description: |-
          Only features that have a geometry that intersects the bounding box are selected.
          The bounding box is provided as four or six numbers, depending on whether the
          coordinate reference system includes a vertical axis (height or depth):
          * Lower left corner, coordinate axis 1
          * Lower left corner, coordinate axis 2
          * Minimum value, coordinate axis 3 (optional)
          * Upper right corner, coordinate axis 1
          * Upper right corner, coordinate axis 2
          * Maximum value, coordinate axis 3 (optional)
          The coordinate reference system of the values is WGS 84 longitude/latitude
          (http://www.opengis.net/def/crs/OGC/1.3/CRS84) unless a different coordinate
          reference system is specified in the parameter `bbox-crs`.
          For WGS 84 longitude/latitude the values are in most cases the sequence of
          minimum longitude, minimum latitude, maximum longitude and maximum latitude.
          However, in cases where the box spans the antimeridian the first value
          (west-most box edge) is larger than the third value (east-most box edge).
          If the vertical axis is included, the third and the sixth number are the
          bottom and the top of the 3-dimensional bounding box.
          If a feature has multiple spatial geometry properties, it is the decision of the
          server whether only a single spatial geometry property is used to determine
          the extent or all relevant geometries.
        explode: false
        in: query
        name: bbox
        required: false
        schema:
          oneOf:
          - items:
              maxItems: 4
              minItems: 4
              type: object
            type: array
          - items:
              maxItems: 6
              minItems: 6
              type: object
            type: array
        style: form
      - description: |-
          Either a date-time or an interval, open or closed. Date and time expressions adhere to RFC 3339. Open intervals are expressed using double-dots.
          Examples:
          * A date-time: "2018-02-12T23:20:50Z" * A closed interval: "2018-02-12T00:00:00Z/2018-03-18T12:31:12Z" * Open intervals: "2018-02-12T00:00:00Z/.." or "../2018-03-18T12:31:12Z"
          Only features that have a temporal property that intersects the value of `datetime` are selected.
          If a feature has multiple temporal properties, it is the decision of the server whether only a single temporal property is used to determine the extent or all relevant temporal properties.
        explode: false
        in: query
        name: datetime
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/geo+json:
              schema:
                $ref: '#/components/schemas/edrFeatureCollectionGeoJSON'
            text/xml: {}
          description: List of predefined locations available from the collection
        "202":
          description: Data request still being processed
        "308":
          description: Request will take a significant time to process
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/exception'
            application/x-netcdf: {}
            text/xml: {}
          description: Requested data not found.
        "413":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/exception'
            application/x-netcdf: {}
            text/xml: {}
          description: Requested data volume to large to be handled by this service.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/exception'
            text/html:
              schema:
                type: string
          description: An error occured.
      summary: List available location identifers for the collection
      tags:
      - Collection metadata
      x-eov-operation-handler: controllers/CollectionMetadataController
  /collections/{collectionId}/locations/{locId}:
    get:
      description: Return data the for the location defined by locid
      operationId: getCollectionDataForLocation
      parameters:
      - description: Identifier (id) of a specific collection
        in: path
        name: collectionId
        required: true
        schema:
          type: string
      - description: Retreive data for the location defined by locId (i.e. London_Heathrow,
          EGLL, 03772 etc)
        in: path
        name: locId
        required: true
        schema:
          type: string
      - description: |-
          Either a date-time or an interval, open or closed. Date and time expressions adhere to RFC 3339. Open intervals are expressed using double-dots.
          Examples:
          * A date-time: "2018-02-12T23:20:50Z" * A closed interval: "2018-02-12T00:00:00Z/2018-03-18T12:31:12Z" * Open intervals: "2018-02-12T00:00:00Z/.." or "../2018-03-18T12:31:12Z"
          Only features that have a temporal property that intersects the value of `datetime` are selected.
          If a feature has multiple temporal properties, it is the decision of the server whether only a single temporal property is used to determine the extent or all relevant temporal properties.
        explode: false
        in: query
        name: datetime
        required: false
        schema:
          type: string
        style: form
      - description: identifier (id) of the coordinate system to return data in list
          of valid crs identifiers for the chosen collection are defined in the metadata
          responses.  If not supplied the coordinate reference system will default
          to WGS84.
        example: native
        in: query
        name: crs
        required: false
        schema:
          type: string
      - description: format to return the data response in
        in: query
        name: f
        required: false
        schema:
          type: string
      responses:
        "200":
          content:
            application/prs.coverage+json:
              schema:
                $ref: '#/components/schemas/coverageJSON'
            application/geo+json:
              schema:
                $ref: '#/components/schemas/edrFeatureCollectionGeoJSON'
            application/x-netcdf: {}
            text/xml: {}
          description: Data returned by querying by location identifier
        "202":
          description: Data request still being processed
        "308":
          description: Request will take a significant time to process
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/exception'
            application/x-netcdf: {}
            text/xml: {}
          description: Requested data not found.
        "413":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/exception'
            application/x-netcdf: {}
            text/xml: {}
          description: Requested data volume to large to be handled by this service.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/exception'
            text/html:
              schema:
                type: string
          description: An error occured.
      summary: Query end point for queries of collection {collectionId} defined by
        a location id
      tags:
      - Collection data queries
      x-eov-operation-handler: controllers/CollectionDataQueriesController
  /collections/{collectionId}/instances/{instanceId}/locations:
    get:
      description: List the locations available for the instance of the collection
      operationId: listDataInstanceLocations
      parameters:
      - description: Identifier (id) of a specific collection
        in: path
        name: collectionId
        required: true
        schema:
          type: string
      - description: Identifier (id) of a specific instance of a collection
        in: path
        name: instanceId
        required: true
        schema:
          type: string
      - description: |-
          Only features that have a geometry that intersects the bounding box are selected.
          The bounding box is provided as four or six numbers, depending on whether the
          coordinate reference system includes a vertical axis (height or depth):
          * Lower left corner, coordinate axis 1
          * Lower left corner, coordinate axis 2
          * Minimum value, coordinate axis 3 (optional)
          * Upper right corner, coordinate axis 1
          * Upper right corner, coordinate axis 2
          * Maximum value, coordinate axis 3 (optional)
          The coordinate reference system of the values is WGS 84 longitude/latitude
          (http://www.opengis.net/def/crs/OGC/1.3/CRS84) unless a different coordinate
          reference system is specified in the parameter `bbox-crs`.
          For WGS 84 longitude/latitude the values are in most cases the sequence of
          minimum longitude, minimum latitude, maximum longitude and maximum latitude.
          However, in cases where the box spans the antimeridian the first value
          (west-most box edge) is larger than the third value (east-most box edge).
          If the vertical axis is included, the third and the sixth number are the
          bottom and the top of the 3-dimensional bounding box.
          If a feature has multiple spatial geometry properties, it is the decision of the
          server whether only a single spatial geometry property is used to determine
          the extent or all relevant geometries.
        explode: false
        in: query
        name: bbox
        required: false
        schema:
          oneOf:
          - items:
              maxItems: 4
              minItems: 4
              type: object
            type: array
          - items:
              maxItems: 6
              minItems: 6
              type: object
            type: array
        style: form
      - description: |-
          Either a date-time or an interval, open or closed. Date and time expressions adhere to RFC 3339. Open intervals are expressed using double-dots.
          Examples:
          * A date-time: "2018-02-12T23:20:50Z" * A closed interval: "2018-02-12T00:00:00Z/2018-03-18T12:31:12Z" * Open intervals: "2018-02-12T00:00:00Z/.." or "../2018-03-18T12:31:12Z"
          Only features that have a temporal property that intersects the value of `datetime` are selected.
          If a feature has multiple temporal properties, it is the decision of the server whether only a single temporal property is used to determine the extent or all relevant temporal properties.
        explode: false
        in: query
        name: datetime
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/geo+json:
              schema:
                $ref: '#/components/schemas/edrFeatureCollectionGeoJSON'
            text/xml: {}
          description: List of predefined locations available from the instance of
            the collection
        "202":
          description: Data request still being processed
        "308":
          description: Request will take a significant time to process
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/exception'
            application/x-netcdf: {}
            text/xml: {}
          description: Requested data not found.
        "413":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/exception'
            application/x-netcdf: {}
            text/xml: {}
          description: Requested data volume to large to be handled by this service.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/exception'
            text/html:
              schema:
                type: string
          description: An error occured.
      summary: List available location identifers for the instance
      tags:
      - Instance metadata
      x-eov-operation-handler: controllers/InstanceMetadataController
  /collections/{collectionId}/instances/{instanceId}/locations/{locId}:
    get:
      description: Return data the for the location defined by locid
      operationId: getInstanceDataForLocation
      parameters:
      - description: Identifier (id) of a specific collection
        in: path
        name: collectionId
        required: true
        schema:
          type: string
      - description: Identifier (id) of a specific instance of a collection
        in: path
        name: instanceId
        required: true
        schema:
          type: string
      - description: Retreive data for the location defined by locId (i.e. London_Heathrow,
          EGLL, 03772 etc)
        in: path
        name: locId
        required: true
        schema:
          type: string
      - description: |-
          Either a date-time or an interval, open or closed. Date and time expressions adhere to RFC 3339. Open intervals are expressed using double-dots.
          Examples:
          * A date-time: "2018-02-12T23:20:50Z" * A closed interval: "2018-02-12T00:00:00Z/2018-03-18T12:31:12Z" * Open intervals: "2018-02-12T00:00:00Z/.." or "../2018-03-18T12:31:12Z"
          Only features that have a temporal property that intersects the value of `datetime` are selected.
          If a feature has multiple temporal properties, it is the decision of the server whether only a single temporal property is used to determine the extent or all relevant temporal properties.
        explode: false
        in: query
        name: datetime
        required: false
        schema:
          type: string
        style: form
      - description: identifier (id) of the coordinate system to return data in list
          of valid crs identifiers for the chosen collection are defined in the metadata
          responses.  If not supplied the coordinate reference system will default
          to WGS84.
        example: native
        in: query
        name: crs
        required: false
        schema:
          type: string
      - description: format to return the data response in
        in: query
        name: f
        required: false
        schema:
          type: string
      responses:
        "200":
          content:
            application/prs.coverage+json:
              schema:
                $ref: '#/components/schemas/coverageJSON'
            application/geo+json:
              schema:
                $ref: '#/components/schemas/edrFeatureCollectionGeoJSON'
            application/x-netcdf: {}
            text/xml: {}
          description: Data returned when querying by identifier
        "202":
          description: Data request still being processed
        "308":
          description: Request will take a significant time to process
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/exception'
            text/xml: {}
          description: Requested data not found.
        "413":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/exception'
            text/xml: {}
          description: Requested data volume to large to be handled by this service.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/exception'
            text/html:
              schema:
                type: string
          description: An error occured.
      summary: Query end point for queries of instance {instanceId} of collection
        {collectionId} defined by a location id
      tags:
      - Instance data queries
      x-eov-operation-handler: controllers/InstanceDataQueriesController
components:
  schemas:
    confClasses:
      example:
        conformsTo:
        - conformsTo
        - conformsTo
      properties:
        conformsTo:
          items:
            type: string
          type: array
      required:
      - conformsTo
      type: object
    landingPage:
      example:
        keywords:
        - Temperature
        - Wind
        - Point
        - Trajectory
        provider:
          name: name
          url: url
        contact:
          stateorprovince: stateorprovince
          instructions: instructions
          country: country
          hours: hours
          address: address
          phone: phone
          city: city
          postalCode: postalCode
          fax: fax
          email: email
        description: Access to Meteorological data via a Web API that conforms to
          the OGC API Environmental Data Retrieval specification.
        links:
        - href: http://localhost:8080/edr/api
          hreflang: en
          rel: service
          type: application/openapi+json;version=3.0
          title: ""
        - href: http://localhost:8080/edr/conformance
          hreflang: en
          rel: data
          type: application/json
          title: ""
        - href: http://localhost:8080/edr/collections
          hreflang: en
          rel: data
          type: application/json
          title: ""
        title: Meteorological data server
      properties:
        title:
          example: Meteorological data server
          type: string
        description:
          example: Access to Meteorological data via a Web API that conforms to the
            OGC API Environmental Data Retrieval specification.
          type: string
        links:
          example:
          - href: http://localhost:8080/edr/api
            hreflang: en
            rel: service
            type: application/openapi+json;version=3.0
            title: ""
          - href: http://localhost:8080/edr/conformance
            hreflang: en
            rel: data
            type: application/json
            title: ""
          - href: http://localhost:8080/edr/collections
            hreflang: en
            rel: data
            type: application/json
            title: ""
          items:
            $ref: '#/components/schemas/link'
          type: array
        keywords:
          example:
          - Temperature
          - Wind
          - Point
          - Trajectory
          items:
            type: string
          type: array
        provider:
          $ref: '#/components/schemas/landingPage_provider'
        contact:
          $ref: '#/components/schemas/landingPage_contact'
      required:
      - links
      type: object
    link:
      example:
        variables:
          within_units:
          - km
          - miles
          output_formats:
          - CoverageJSON
          - GeoJSON
          - IWXXM
          - GRIB
          description: Query to return data for a defined well known text point
          query_type: trajectory
          title: Position query
          width_units:
          - km
          - miles
          height_units:
          - m
          - hPa
          default_output_format: default_output_format
          crs_details:
          - wkt: GEOGCS["WGS 84",DATUM["WGS_1984",SPHEROID["WGS 84",6378137,298.257223563,AUTHORITY["EPSG","7030"]],AUTHORITY["EPSG","6326"]],PRIMEM["Greenwich",0,AUTHORITY["EPSG","8901"]],UNIT["degree",0.01745329251994328,AUTHORITY["EPSG","9122"]],AUTHORITY["EPSG","4326"]]
            crs: native
          - wkt: GEOGCS["WGS 84",DATUM["WGS_1984",SPHEROID["WGS 84",6378137,298.257223563,AUTHORITY["EPSG","7030"]],AUTHORITY["EPSG","6326"]],PRIMEM["Greenwich",0,AUTHORITY["EPSG","8901"]],UNIT["degree",0.01745329251994328,AUTHORITY["EPSG","9122"]],AUTHORITY["EPSG","4326"]]
            crs: native
          coords:
            tag: Well Known Text POINT definition i.e. POINT(-120 55)
        hreflang: en
        templated: true
        rel: alternate
        length: 0
        href: http://data.example.com/collections/monitoringsites/locations/1234
        type: application/geo+json
        title: Monitoring site name
      properties:
        href:
          example: http://data.example.com/collections/monitoringsites/locations/1234
          type: string
        rel:
          example: alternate
          type: string
        type:
          example: application/geo+json
          type: string
        hreflang:
          example: en
          type: string
        title:
          example: Monitoring site name
          type: string
        length:
          type: integer
        templated:
          description: defines if the link href value is a template with values requiring
            replacement
          type: boolean
        variables:
          $ref: '#/components/schemas/dataQuery'
      required:
      - href
      - rel
      type: object
    dataQuery:
      description: Property to contain any extra metadata information that is specific
        to an individual data queries
      example:
        within_units:
        - km
        - miles
        output_formats:
        - CoverageJSON
        - GeoJSON
        - IWXXM
        - GRIB
        description: Query to return data for a defined well known text point
        query_type: trajectory
        title: Position query
        width_units:
        - km
        - miles
        height_units:
        - m
        - hPa
        default_output_format: default_output_format
        crs_details:
        - wkt: GEOGCS["WGS 84",DATUM["WGS_1984",SPHEROID["WGS 84",6378137,298.257223563,AUTHORITY["EPSG","7030"]],AUTHORITY["EPSG","6326"]],PRIMEM["Greenwich",0,AUTHORITY["EPSG","8901"]],UNIT["degree",0.01745329251994328,AUTHORITY["EPSG","9122"]],AUTHORITY["EPSG","4326"]]
          crs: native
        - wkt: GEOGCS["WGS 84",DATUM["WGS_1984",SPHEROID["WGS 84",6378137,298.257223563,AUTHORITY["EPSG","7030"]],AUTHORITY["EPSG","6326"]],PRIMEM["Greenwich",0,AUTHORITY["EPSG","8901"]],UNIT["degree",0.01745329251994328,AUTHORITY["EPSG","9122"]],AUTHORITY["EPSG","4326"]]
          crs: native
        coords:
          tag: Well Known Text POINT definition i.e. POINT(-120 55)
      properties:
        title:
          description: title of the query
          example: Position query
          type: string
        description:
          description: description of the query
          example: Query to return data for a defined well known text point
          type: string
        query_type:
          description: Type of EDR query
          enum:
          - position
          - radius
          - area
          - cube
          - trajectory
          - corridor
          - items
          - locations
          - instances
          example: trajectory
          type: string
        coords:
          $ref: '#/components/schemas/dataQuery_coords'
        within_units:
          description: list of distance units radius values can be specified in
          example:
          - km
          - miles
          items:
            type: string
          type: array
        width_units:
          description: list of width distance units distance values can be specified
            in
          example:
          - km
          - miles
          items:
            type: string
          type: array
        height_units:
          description: list of height distance units distance values can be specified
            in
          example:
          - m
          - hPa
          items:
            type: string
          type: array
        output_formats:
          description: list of formats the results can be presented in
          example:
          - CoverageJSON
          - GeoJSON
          - IWXXM
          - GRIB
          items:
            type: string
          type: array
        default_output_format:
          description: default outputformat
          type: string
        crs_details:
          description: List of key/value definitions for the CRS's supported by a
            query.  The key is the query parameter and the value is the Well Known
            Text description
          items:
            $ref: '#/components/schemas/crsObject'
          type: array
      type: object
    landingPage_provider:
      example:
        name: name
        url: url
      properties:
        name:
          description: Name of organization providing the service
          type: string
        url:
          description: Link to service providers website
          type: string
      type: object
    landingPage_contact:
      example:
        stateorprovince: stateorprovince
        instructions: instructions
        country: country
        hours: hours
        address: address
        phone: phone
        city: city
        postalCode: postalCode
        fax: fax
        email: email
      properties:
        email:
          description: Email address of service provider
          type: string
        phone:
          description: Phone number of service provider
          type: string
        fax:
          description: Fax number of service provider
          type: string
        hours:
          type: string
        instructions:
          type: string
        address:
          type: string
        postalCode:
          type: string
        city:
          type: string
        stateorprovince:
          type: string
        country:
          type: string
      type: object
    dataQuery_coords:
      description: Description of valid coords query parameter values
      example:
        tag: Well Known Text POINT definition i.e. POINT(-120 55)
      properties:
        tag:
          description: Coordinates
          example: Well Known Text POINT definition i.e. POINT(-120 55)
          type: string
      type: object
    crsObject:
      example:
        wkt: GEOGCS["WGS 84",DATUM["WGS_1984",SPHEROID["WGS 84",6378137,298.257223563,AUTHORITY["EPSG","7030"]],AUTHORITY["EPSG","6326"]],PRIMEM["Greenwich",0,AUTHORITY["EPSG","8901"]],UNIT["degree",0.01745329251994328,AUTHORITY["EPSG","9122"]],AUTHORITY["EPSG","4326"]]
        crs: native
      properties:
        crs:
          description: name of the coordinate reference system, used as the value
            in the crs query parameter to define the required output CRS
          example: native
          type: string
        wkt:
          description: Well Known text description of the coordinate reference system
          example: GEOGCS["WGS 84",DATUM["WGS_1984",SPHEROID["WGS 84",6378137,298.257223563,AUTHORITY["EPSG","7030"]],AUTHORITY["EPSG","6326"]],PRIMEM["Greenwich",0,AUTHORITY["EPSG","8901"]],UNIT["degree",0.01745329251994328,AUTHORITY["EPSG","9122"]],AUTHORITY["EPSG","4326"]]
          type: string
      required:
      - crs
      - wkt
      type: object
    groups:
      example:
        members:
        - variables:
            within_units:
            - km
            - miles
            output_formats:
            - CoverageJSON
            - GeoJSON
            - IWXXM
            - GRIB
            description: Query to return data for a defined well known text point
            query_type: trajectory
            title: Position query
            width_units:
            - km
            - miles
            height_units:
            - m
            - hPa
            default_output_format: default_output_format
            crs_details:
            - wkt: GEOGCS["WGS 84",DATUM["WGS_1984",SPHEROID["WGS 84",6378137,298.257223563,AUTHORITY["EPSG","7030"]],AUTHORITY["EPSG","6326"]],PRIMEM["Greenwich",0,AUTHORITY["EPSG","8901"]],UNIT["degree",0.01745329251994328,AUTHORITY["EPSG","9122"]],AUTHORITY["EPSG","4326"]]
              crs: native
            - wkt: GEOGCS["WGS 84",DATUM["WGS_1984",SPHEROID["WGS 84",6378137,298.257223563,AUTHORITY["EPSG","7030"]],AUTHORITY["EPSG","6326"]],PRIMEM["Greenwich",0,AUTHORITY["EPSG","8901"]],UNIT["degree",0.01745329251994328,AUTHORITY["EPSG","9122"]],AUTHORITY["EPSG","4326"]]
              crs: native
            coords:
              tag: Well Known Text POINT definition i.e. POINT(-120 55)
          hreflang: en
          templated: true
          rel: alternate
          length: 0
          href: http://data.example.com/collections/monitoringsites/locations/1234
          type: application/geo+json
          title: Monitoring site name
        - variables:
            within_units:
            - km
            - miles
            output_formats:
            - CoverageJSON
            - GeoJSON
            - IWXXM
            - GRIB
            description: Query to return data for a defined well known text point
            query_type: trajectory
            title: Position query
            width_units:
            - km
            - miles
            height_units:
            - m
            - hPa
            default_output_format: default_output_format
            crs_details:
            - wkt: GEOGCS["WGS 84",DATUM["WGS_1984",SPHEROID["WGS 84",6378137,298.257223563,AUTHORITY["EPSG","7030"]],AUTHORITY["EPSG","6326"]],PRIMEM["Greenwich",0,AUTHORITY["EPSG","8901"]],UNIT["degree",0.01745329251994328,AUTHORITY["EPSG","9122"]],AUTHORITY["EPSG","4326"]]
              crs: native
            - wkt: GEOGCS["WGS 84",DATUM["WGS_1984",SPHEROID["WGS 84",6378137,298.257223563,AUTHORITY["EPSG","7030"]],AUTHORITY["EPSG","6326"]],PRIMEM["Greenwich",0,AUTHORITY["EPSG","8901"]],UNIT["degree",0.01745329251994328,AUTHORITY["EPSG","9122"]],AUTHORITY["EPSG","4326"]]
              crs: native
            coords:
              tag: Well Known Text POINT definition i.e. POINT(-120 55)
          hreflang: en
          templated: true
          rel: alternate
          length: 0
          href: http://data.example.com/collections/monitoringsites/locations/1234
          type: application/geo+json
          title: Monitoring site name
        links:
        - href: http://data.example.org/collections.json
          rel: self
          type: application/json
          title: this document
        - href: http://data.example.org/collections.html
          rel: alternate
          type: text/html
          title: this document as HTML
        - href: http://schemas.example.org/1.0/foobar.xsd
          rel: describedby
          type: application/xml
          title: XML schema for Acme Corporation data
      properties:
        links:
          example:
          - href: http://data.example.org/collections.json
            rel: self
            type: application/json
            title: this document
          - href: http://data.example.org/collections.html
            rel: alternate
            type: text/html
            title: this document as HTML
          - href: http://schemas.example.org/1.0/foobar.xsd
            rel: describedby
            type: application/xml
            title: XML schema for Acme Corporation data
          items:
            $ref: '#/components/schemas/link'
          type: array
        members:
          items:
            $ref: '#/components/schemas/link'
          type: array
      required:
      - links
      - members
      type: object
    exception:
      properties:
        code:
          type: string
        description:
          type: string
      required:
      - code
      type: object
    collections:
      example:
        collections:
        - extent:
            vertical:
              vrs: VERTCS["WGS_1984",DATUM["D_WGS_1984",SPHEROID["WGS_1984",6378137.0,298.257223563]],PARAMETER["Vertical_Shift",0.0],PARAMETER["Direction",1.0],UNIT["Meter",1.0]],AXIS["Up",UP]
              name: name
              interval:
              - - "850"
              - - "850"
            spatial:
              crs: GEOGCS["WGS 84",DATUM["WGS_1984",SPHEROID["WGS 84",6378137,298.257223563,AUTHORITY["EPSG","7030"]],AUTHORITY["EPSG","6326"]],PRIMEM["Greenwich",0,AUTHORITY["EPSG","8901"]],UNIT["degree",0.01745329251994328,AUTHORITY["EPSG","9122"]],AUTHORITY["EPSG","4326"]]
              bbox:
              - -180
              - -90
              - 180
              - 90
              name: name
            temporal:
              trs: TIMECRS["DateTime",TDATUM["Gregorian Calendar"],CS[TemporalDateTime,1],AXIS["Time
                (T)",future]
              name: name
              interval:
              - - 2020-11-12T12:15Z,2020-11-12T12:30Z,2020-11-12T12:45Z
              - - 2020-11-12T12:15Z,2020-11-12T12:30Z,2020-11-12T12:45Z
          parameter_names:
            key: '{}'
          keywords:
          - keywords
          - keywords
          crs:
          - crs
          - crs
          output_formats:
          - CoverageJSON
          - GeoJSON
          - IWXXM
          - GRIB
          description: Last 24 hours Metar observations
          links:
          - href: https://wlocalhost:8080/service/description.html
            hreflang: en
            rel: service-doc
            type: text/html
            title: ""
          - href: https://localhost:8080/service/licence.html
            hreflang: en
            rel: licence
            type: text/html
            title: ""
          - href: https://localhost:8080/service/terms-and-conditions.html
            hreflang: en
            rel: restrictions
            type: text/html
            title: ""
          - href: http://localhost:8080/edr/collections/the_collection_id/
            hreflang: en
            rel: collection
            type: collection
            title: Collection
          - href: http://localhost:8080/edr/collections/the_collection_id/position
            hreflang: en
            rel: data
            type: position
            title: Position
          - href: http://localhost:8080/edr/collections/the_collection_id/area
            hreflang: en
            rel: data
            type: area
            title: Area
          id: Metar data
          title: Metar observations
          data_queries: '{}'
        - extent:
            vertical:
              vrs: VERTCS["WGS_1984",DATUM["D_WGS_1984",SPHEROID["WGS_1984",6378137.0,298.257223563]],PARAMETER["Vertical_Shift",0.0],PARAMETER["Direction",1.0],UNIT["Meter",1.0]],AXIS["Up",UP]
              name: name
              interval:
              - - "850"
              - - "850"
            spatial:
              crs: GEOGCS["WGS 84",DATUM["WGS_1984",SPHEROID["WGS 84",6378137,298.257223563,AUTHORITY["EPSG","7030"]],AUTHORITY["EPSG","6326"]],PRIMEM["Greenwich",0,AUTHORITY["EPSG","8901"]],UNIT["degree",0.01745329251994328,AUTHORITY["EPSG","9122"]],AUTHORITY["EPSG","4326"]]
              bbox:
              - -180
              - -90
              - 180
              - 90
              name: name
            temporal:
              trs: TIMECRS["DateTime",TDATUM["Gregorian Calendar"],CS[TemporalDateTime,1],AXIS["Time
                (T)",future]
              name: name
              interval:
              - - 2020-11-12T12:15Z,2020-11-12T12:30Z,2020-11-12T12:45Z
              - - 2020-11-12T12:15Z,2020-11-12T12:30Z,2020-11-12T12:45Z
          parameter_names:
            key: '{}'
          keywords:
          - keywords
          - keywords
          crs:
          - crs
          - crs
          output_formats:
          - CoverageJSON
          - GeoJSON
          - IWXXM
          - GRIB
          description: Last 24 hours Metar observations
          links:
          - href: https://wlocalhost:8080/service/description.html
            hreflang: en
            rel: service-doc
            type: text/html
            title: ""
          - href: https://localhost:8080/service/licence.html
            hreflang: en
            rel: licence
            type: text/html
            title: ""
          - href: https://localhost:8080/service/terms-and-conditions.html
            hreflang: en
            rel: restrictions
            type: text/html
            title: ""
          - href: http://localhost:8080/edr/collections/the_collection_id/
            hreflang: en
            rel: collection
            type: collection
            title: Collection
          - href: http://localhost:8080/edr/collections/the_collection_id/position
            hreflang: en
            rel: data
            type: position
            title: Position
          - href: http://localhost:8080/edr/collections/the_collection_id/area
            hreflang: en
            rel: data
            type: area
            title: Area
          id: Metar data
          title: Metar observations
          data_queries: '{}'
        links:
        - href: http://localhost:8080/edr/collections
          hreflang: en
          rel: self
          type: application/yaml
        - href: http://localhost:8080/edr/collections?f=html
          hreflang: en
          rel: alternate
          type: text/html
        - href: http://localhost:8080/edr/collections?f=xml
          hreflang: en
          rel: alternate
          type: application/xml
      properties:
        links:
          example:
          - href: http://localhost:8080/edr/collections
            hreflang: en
            rel: self
            type: application/yaml
          - href: http://localhost:8080/edr/collections?f=html
            hreflang: en
            rel: alternate
            type: text/html
          - href: http://localhost:8080/edr/collections?f=xml
            hreflang: en
            rel: alternate
            type: application/xml
          items:
            $ref: '#/components/schemas/link'
          type: array
        collections:
          items:
            $ref: '#/components/schemas/collection'
          type: array
      required:
      - collections
      - links
      type: object
    collection:
      example:
        extent:
          vertical:
            vrs: VERTCS["WGS_1984",DATUM["D_WGS_1984",SPHEROID["WGS_1984",6378137.0,298.257223563]],PARAMETER["Vertical_Shift",0.0],PARAMETER["Direction",1.0],UNIT["Meter",1.0]],AXIS["Up",UP]
            name: name
            interval:
            - - "850"
            - - "850"
          spatial:
            crs: GEOGCS["WGS 84",DATUM["WGS_1984",SPHEROID["WGS 84",6378137,298.257223563,AUTHORITY["EPSG","7030"]],AUTHORITY["EPSG","6326"]],PRIMEM["Greenwich",0,AUTHORITY["EPSG","8901"]],UNIT["degree",0.01745329251994328,AUTHORITY["EPSG","9122"]],AUTHORITY["EPSG","4326"]]
            bbox:
            - -180
            - -90
            - 180
            - 90
            name: name
          temporal:
            trs: TIMECRS["DateTime",TDATUM["Gregorian Calendar"],CS[TemporalDateTime,1],AXIS["Time
              (T)",future]
            name: name
            interval:
            - - 2020-11-12T12:15Z,2020-11-12T12:30Z,2020-11-12T12:45Z
            - - 2020-11-12T12:15Z,2020-11-12T12:30Z,2020-11-12T12:45Z
        parameter_names:
          key: '{}'
        keywords:
        - keywords
        - keywords
        crs:
        - crs
        - crs
        output_formats:
        - CoverageJSON
        - GeoJSON
        - IWXXM
        - GRIB
        description: Last 24 hours Metar observations
        links:
        - href: https://wlocalhost:8080/service/description.html
          hreflang: en
          rel: service-doc
          type: text/html
          title: ""
        - href: https://localhost:8080/service/licence.html
          hreflang: en
          rel: licence
          type: text/html
          title: ""
        - href: https://localhost:8080/service/terms-and-conditions.html
          hreflang: en
          rel: restrictions
          type: text/html
          title: ""
        - href: http://localhost:8080/edr/collections/the_collection_id/
          hreflang: en
          rel: collection
          type: collection
          title: Collection
        - href: http://localhost:8080/edr/collections/the_collection_id/position
          hreflang: en
          rel: data
          type: position
          title: Position
        - href: http://localhost:8080/edr/collections/the_collection_id/area
          hreflang: en
          rel: data
          type: area
          title: Area
        id: Metar data
        title: Metar observations
        data_queries: '{}'
      properties:
        links:
          example:
          - href: https://wlocalhost:8080/service/description.html
            hreflang: en
            rel: service-doc
            type: text/html
            title: ""
          - href: https://localhost:8080/service/licence.html
            hreflang: en
            rel: licence
            type: text/html
            title: ""
          - href: https://localhost:8080/service/terms-and-conditions.html
            hreflang: en
            rel: restrictions
            type: text/html
            title: ""
          - href: http://localhost:8080/edr/collections/the_collection_id/
            hreflang: en
            rel: collection
            type: collection
            title: Collection
          - href: http://localhost:8080/edr/collections/the_collection_id/position
            hreflang: en
            rel: data
            type: position
            title: Position
          - href: http://localhost:8080/edr/collections/the_collection_id/area
            hreflang: en
            rel: data
            type: area
            title: Area
          items:
            $ref: '#/components/schemas/link'
          type: array
        id:
          description: id of the collection
          example: Metar data
          type: string
        title:
          description: title of the collection
          example: Metar observations
          type: string
        description:
          description: description of the collection
          example: Last 24 hours Metar observations
          type: string
        keywords:
          description: List of keywords which help to describe the collection
          items:
            type: string
          type: array
        extent:
          $ref: '#/components/schemas/extent'
        data_queries:
          type: object
        crs:
          description: list of the coordinate reference systems the collection results
            can support
          items:
            type: string
          type: array
        output_formats:
          description: list of formats the results can be presented in
          example:
          - CoverageJSON
          - GeoJSON
          - IWXXM
          - GRIB
          items:
            type: string
          type: array
        parameter_names:
          additionalProperties:
            type: object
          description: list of the data parameters available in the collection
          type: object
      required:
      - id
      - links
      - parameter-names
      type: object
    extent:
      description: |-
        The extent of the information in the collection. In the Core only spatial and temporal
        extents are specified. Extensions may add additional members to represent other
        extents, for example, thermal or pressure ranges.
      example:
        vertical:
          vrs: VERTCS["WGS_1984",DATUM["D_WGS_1984",SPHEROID["WGS_1984",6378137.0,298.257223563]],PARAMETER["Vertical_Shift",0.0],PARAMETER["Direction",1.0],UNIT["Meter",1.0]],AXIS["Up",UP]
          name: name
          interval:
          - - "850"
          - - "850"
        spatial:
          crs: GEOGCS["WGS 84",DATUM["WGS_1984",SPHEROID["WGS 84",6378137,298.257223563,AUTHORITY["EPSG","7030"]],AUTHORITY["EPSG","6326"]],PRIMEM["Greenwich",0,AUTHORITY["EPSG","8901"]],UNIT["degree",0.01745329251994328,AUTHORITY["EPSG","9122"]],AUTHORITY["EPSG","4326"]]
          bbox:
          - -180
          - -90
          - 180
          - 90
          name: name
        temporal:
          trs: TIMECRS["DateTime",TDATUM["Gregorian Calendar"],CS[TemporalDateTime,1],AXIS["Time
            (T)",future]
          name: name
          interval:
          - - 2020-11-12T12:15Z,2020-11-12T12:30Z,2020-11-12T12:45Z
          - - 2020-11-12T12:15Z,2020-11-12T12:30Z,2020-11-12T12:45Z
      properties:
        spatial:
          $ref: '#/components/schemas/extent_spatial'
        temporal:
          $ref: '#/components/schemas/extent_temporal'
        vertical:
          $ref: '#/components/schemas/extent_vertical'
      type: object
    extent_spatial:
      description: The spatial extent of the information in the collection.
      example:
        crs: GEOGCS["WGS 84",DATUM["WGS_1984",SPHEROID["WGS 84",6378137,298.257223563,AUTHORITY["EPSG","7030"]],AUTHORITY["EPSG","6326"]],PRIMEM["Greenwich",0,AUTHORITY["EPSG","8901"]],UNIT["degree",0.01745329251994328,AUTHORITY["EPSG","9122"]],AUTHORITY["EPSG","4326"]]
        bbox:
        - -180
        - -90
        - 180
        - 90
        name: name
      properties:
        bbox:
          description: |-
            One or more bounding boxes that describe the spatial extent of the dataset.
            In the Core only a single bounding box is supported. Extensions may support
            additional areas. If multiple areas are provided, the union of the bounding
            boxes describes the spatial extent.
          example:
          - -180
          - -90
          - 180
          - 90
          items:
            description: |-
              Each bounding box is provided as four or six numbers, depending on
              whether the coordinate reference system includes a vertical axis
              (height or depth):

              * Lower left corner, coordinate axis 1
              * Lower left corner, coordinate axis 2
              * Minimum value, coordinate axis 3 (optional)
              * Upper right corner, coordinate axis 1
              * Upper right corner, coordinate axis 2
              * Maximum value, coordinate axis 3 (optional)

              The coordinate reference system of the values is WGS 84 longitude/latitude
              (http://www.opengis.net/def/crs/OGC/1.3/CRS84) unless a different coordinate
              reference system is specified in `crs`.

              For WGS 84 longitude/latitude the values are in most cases the sequence of
              minimum longitude, minimum latitude, maximum longitude and maximum latitude.
              However, in cases where the box spans the antimeridian the first value
              (west-most box edge) is larger than the third value (east-most box edge).

              If the vertical axis is included, the third and the sixth number are
              the bottom and the top of the 3-dimensional bounding box.

              If a feature has multiple spatial geometry properties, it is the decision of the
              server whether only a single spatial geometry property is used to determine
              the extent or all relevant geometries.
            oneOf:
            - maxItems: 4
              minItems: 4
              type: object
            - maxItems: 6
              minItems: 6
              type: object
            type: array
          minItems: 1
          type: array
        crs:
          default: GEOGCS["WGS 84",DATUM["WGS_1984",SPHEROID["WGS 84",6378137,298.257223563,AUTHORITY["EPSG","7030"]],AUTHORITY["EPSG","6326"]],PRIMEM["Greenwich",0,AUTHORITY["EPSG","8901"]],UNIT["degree",0.01745329251994328,AUTHORITY["EPSG","9122"]],AUTHORITY["EPSG","4326"]]
          description: |-
            Coordinate reference system of the coordinates in the spatial extent
            (property `bbox`). The default reference system is WGS 84 longitude/latitude.
            In the Core this is the only supported coordinate reference system.
            Extensions may support additional coordinate reference systems and add
            additional enum values.
          enum:
          - GEOGCS["WGS 84",DATUM["WGS_1984",SPHEROID["WGS 84",6378137,298.257223563,AUTHORITY["EPSG","7030"]],AUTHORITY["EPSG","6326"]],PRIMEM["Greenwich",0,AUTHORITY["EPSG","8901"]],UNIT["degree",0.01745329251994328,AUTHORITY["EPSG","9122"]],AUTHORITY["EPSG","4326"]]
          type: string
        name:
          description: Name of the vertical coordinate reference system
          type: string
      required:
      - bbox
      - crs
      type: object
    extent_temporal:
      description: The temporal extent of the information in the collection.
      example:
        trs: TIMECRS["DateTime",TDATUM["Gregorian Calendar"],CS[TemporalDateTime,1],AXIS["Time
          (T)",future]
        name: name
        interval:
        - - 2020-11-12T12:15Z,2020-11-12T12:30Z,2020-11-12T12:45Z
        - - 2020-11-12T12:15Z,2020-11-12T12:30Z,2020-11-12T12:45Z
      properties:
        interval:
          description: RFC3339 compliant Date and Time, either as a time range specified
            as start time / end time / interval (e.g. 2017-11-14T09:00Z/2017-11-14T21:00Z/PT3H)
            or a list of time values (e.g. 2017-11-14T09:00Z,2017-11-14T12:00Z,2017-11-14T15:00Z,2017-11-14T18:00Z,2017-11-14T21:00Z)
          items:
            description: |-
              Begin and end times of the time interval. The timestamps are in the
              temporal coordinate reference system specified in `trs`. By default
              this is the Gregorian calendar.
            example:
            - 2020-11-12T12:15Z,2020-11-12T12:30Z,2020-11-12T12:45Z
            items:
              format: date-time
              nullable: true
              type: string
            maxItems: 2
            minItems: 2
            type: array
          minItems: 1
          type: array
        trs:
          default: http://www.opengis.net/def/uom/ISO-8601/0/Gregorian
          description: |-
            Coordinate reference system of the coordinates in the temporal extent
            (property `interval`). The default reference system is the Gregorian calendar.
            In the Core this is the only supported temporal coordinate reference system.
            Extensions may support additional temporal coordinate reference systems and add
            additional enum values.
          example: TIMECRS["DateTime",TDATUM["Gregorian Calendar"],CS[TemporalDateTime,1],AXIS["Time
            (T)",future]
          type: string
        name:
          description: Name of the temporal coordinate reference system
          type: string
      required:
      - interval
      - trs
      type: object
    extent_vertical:
      description: The vertical extent of the information in the collection.
      example:
        vrs: VERTCS["WGS_1984",DATUM["D_WGS_1984",SPHEROID["WGS_1984",6378137.0,298.257223563]],PARAMETER["Vertical_Shift",0.0],PARAMETER["Direction",1.0],UNIT["Meter",1.0]],AXIS["Up",UP]
        name: name
        interval:
        - - "850"
        - - "850"
      properties:
        interval:
          description: |-
            One or more height intervals that describe the vertical extent of the dataset.
            The value `null` is supported and indicates an open vertical interval.
            In the Core only a single time interval is supported. Extensions may support
            multiple intervals. If multiple intervals are provided, the union of the
            intervals describes the vertical extent.
          items:
            description: |-
              minimum and maximum heights of the vertical interval. The values are in the
              vertical coordinate reference system specified in `vrs`. By default
              this is the vertical coordinate reference system of the source information.
            example:
            - "850"
            items:
              nullable: true
              type: string
            minItems: 1
            type: array
          minItems: 1
          type: array
        vrs:
          default: VERTCS["WGS_1984",DATUM["D_WGS_1984",SPHEROID["WGS_1984",6378137.0,298.257223563]],PARAMETER["Vertical_Shift",0.0],PARAMETER["Direction",1.0],UNIT["Meter",1.0]],AXIS["Up",UP]
          description: "Coordinate reference system of the coordinates in the vertical\
            \ extent\n(property `interval`). "
          example: VERTCS["WGS_1984",DATUM["D_WGS_1984",SPHEROID["WGS_1984",6378137.0,298.257223563]],PARAMETER["Vertical_Shift",0.0],PARAMETER["Direction",1.0],UNIT["Meter",1.0]],AXIS["Up",UP]
          type: string
        name:
          description: Name of the vertical coordinate reference system
          type: string
      required:
      - interval
      - vrs
      type: object
    fourElementArray:
      items:
        maxItems: 4
        minItems: 4
        type: object
      type: array
    sixElementArray:
      items:
        maxItems: 6
        minItems: 6
        type: object
      type: array
    coverageJSON:
      description: A geospatial coverage interchange format based on JavaScript Object
        Notation (JSON)
      example:
        ranges:
          key:
            type: NdArray
            dataType: float
            axisNames:
            - t
            - z
            - "y"
            - x
            shape:
            - 1
            - 1
            - 2
            - 3
            values:
            - 0.5
            - 0.6
            - 0.4
            - 0.6
            - 0.2
            - null
        domain:
          type: Domain
          domainType: Grid
          axes:
            x:
              values:
              - -10
              - -5
              - 0
            y:
              values:
              - 40
              - 50
            z:
              values:
              - 5
            t:
              values:
              - 2010-01-01T00:12:20Z
        type: '{}'
        parameters:
          key:
            type: Parameter
            id: sea_ice
            description: Sea Ice concentration (ice=1;no ice=0)
            unit:
              label: Ratio
              symbol:
                value: "1"
                type: http://www.opengis.net/def/uom/UCUM/
            observedProperty:
              id: http://vocab.nerc.ac.uk/standard_name/sea_ice_area_fraction/
              label: Sea Ice Concentration
      properties:
        type:
          description: Coverage domain type
          enum:
          - Coverage
          - CoverageCollection
          - Domain
          type: object
        domain:
          $ref: '#/components/schemas/Domain_description'
        parameters:
          additionalProperties:
            $ref: '#/components/schemas/parameter'
          type: object
        ranges:
          additionalProperties:
            description: Parameter data values described by N dimensional data arrays
            example:
              type: NdArray
              dataType: float
              axisNames:
              - t
              - z
              - "y"
              - x
              shape:
              - 1
              - 1
              - 2
              - 3
              values:
              - 0.5
              - 0.6
              - 0.4
              - 0.6
              - 0.2
              - null
            oneOf:
            - properties:
                type:
                  description: Definition of the data structure
                  enum:
                  - NdArray
                  type: object
                dataType:
                  description: Format of the data values in the array
                  enum:
                  - integer
                  - long
                  - float
                  - double
                  - string
                  type: object
                axisNames:
                  description: Labels for the data axes
                  items:
                    type: string
                  type: array
                shape:
                  description: Structure of the N dimensional array data
                  items:
                    type: number
                  type: array
                values:
                  description: Parameter data values
                  items:
                    oneOf:
                    - type: number
                    - type: string
                  type: array
              required:
              - dataType
              - type
              - values
              type: object
            - properties:
                type:
                  description: Definition of the data structure
                  enum:
                  - NdArray
                  - TiledNdArray
                  type: object
                dataType:
                  description: Format of the data values in the array
                  enum:
                  - integer
                  - long
                  - float
                  - double
                  - string
                  type: object
                axisNames:
                  description: Labels for the data axes
                  items:
                    type: string
                  type: array
                shape:
                  description: Structure of the N dimensional array data
                  items:
                    type: number
                  type: array
                tileSets:
                  items:
                    properties:
                      tileShape:
                        items:
                          type: number
                        type: array
                      urlTemplate:
                        type: string
                    required:
                    - tileShape
                    - urlTemplate
                    type: object
                  type: array
              required:
              - axisNames
              - dataType
              - shape
              - tileSets
              - type
              type: object
            title: Parameter data values
            type: object
          type: object
      required:
      - domain
      - parameters
      - ranges
      - type
      title: CoverageJSON
      type: object
    Domain_description:
      description: Definition of the Coverage geo-temporal domain
      example:
        type: Domain
        domainType: Grid
        axes:
          x:
            values:
            - -10
            - -5
            - 0
          y:
            values:
            - 40
            - 50
          z:
            values:
            - 5
          t:
            values:
            - 2010-01-01T00:12:20Z
      properties:
        type:
          description: Type
          enum:
          - Domain
          type: object
        domainType:
          description: Domain type
          enum:
          - Grid
          - Point
          - Trajectory
          - PointSeries
          - PolygonSeries
          - MultiPolygon
          - MultiPoint
          - VerticalProfile
          type: object
        axes:
          anyOf:
          - required:
            - composite
            type: object
          - required:
            - x
            - "y"
            type: object
          description: Geotemporal dimension axes of the CoverageJSON domain
          example:
            x:
              values:
              - -10
              - -5
              - 0
            y:
              values:
              - 40
              - 50
            z:
              values:
              - 5
            t:
              values:
              - 2010-01-01T00:12:20Z
          properties:
            composite:
              $ref: '#/components/schemas/compositeAxes'
            x:
              description: x coordinates definition
              example:
              - -10
              - -5
              - 0
              properties:
                values:
                  description: Array of numeric values
                  items:
                    type: number
                  type: array
              required:
              - values
              title: X axis values
              type: object
            y:
              description: y coordinates definition
              example:
              - -10
              - -5
              - 0
              properties:
                values:
                  description: Array of numeric values
                  items:
                    type: number
                  type: array
              required:
              - values
              title: Y axis values
              type: object
            z:
              description: z coordinates definition
              example:
              - -10
              - -5
              - 0
              properties:
                values:
                  description: Array of string values
                  items:
                    oneOf:
                    - type: string
                    - type: number
                  type: array
              required:
              - values
              title: Z axis values
              type: object
            t:
              description: datetime coordinates definition
              example:
              - 1990-12-31T23:59:60Z
              - 2020-02-01T04:00:00Z
              - 2012-08-01T00:00:00Z
              properties:
                values:
                  description: Array of string values following RFC3339 formatting
                    conventions
                  items:
                    type: string
                  type: array
              required:
              - values
              title: Datetime axis values
              type: object
          title: Domain dimensions
          type: object
      required:
      - axes
      - domainType
      - type
      title: Domain description
      type: object
    compositeAxes:
      description: Composite Axis where the Axes values are described as Tuples rather
        than individual arrays
      properties:
        dataType:
          type: string
        coordinates:
          items:
            type: string
          type: array
        values:
          items:
            items:
              anyOf:
              - type: number
              - type: string
            type: array
          type: array
      required:
      - coordinates
      - dataType
      - values
      type: object
    parameter:
      description: Definition of data parameter
      example:
        type: Parameter
        id: sea_ice
        description: Sea Ice concentration (ice=1;no ice=0)
        unit:
          label: Ratio
          symbol:
            value: "1"
            type: http://www.opengis.net/def/uom/UCUM/
        observedProperty:
          id: http://vocab.nerc.ac.uk/standard_name/sea_ice_area_fraction/
          label: Sea Ice Concentration
      properties:
        type:
          description: type
          enum:
          - Parameter
          type: object
        description:
          type: string
        label:
          type: string
        data-type:
          description: Data type of returned parameter
          enum:
          - integer
          - float
          - string
          type: object
        unit:
          $ref: '#/components/schemas/units'
        observedProperty:
          $ref: '#/components/schemas/observedProperty'
        categoryEncoding:
          additionalProperties:
            type: object
          type: object
        extent:
          $ref: '#/components/schemas/parameterExtent'
        id:
          description: Unique ID of the parameter, this is the value used for querying
            the data
          type: string
        measurementType:
          $ref: '#/components/schemas/Parameter_measurement_approach'
      required:
      - observedProperty
      - type
      title: Parameter name
      type: object
    units:
      anyOf:
      - required:
        - label
        type: object
      - required:
        - symbol
        type: object
      description: definition of data units
      example:
        label:
          en: Kelvin
        symbol:
          value: K
          type: http://www.opengis.net/def/uom/UCUM/
      properties:
        label:
          properties:
            en:
              type: string
          type: object
        symbol:
          anyOf:
          - description: Information about the symbol used to describe the units
            properties:
              value:
                description: representation of the units symbol
                type: string
              type:
                description: uri to detailed desxcription of the units
                type: string
            required:
            - type
            - value
            type: object
          - type: string
          example:
            value: hPa
            type: http://www.opengis.net/def/uom/UCUM/
          title: Decribe unit symbol
        id:
          type: string
      title: unit name
      type: object
    parameterExtent:
      description: Definition of the geo-temporal extent of a parameter
      example:
        dimensions:
          x: 92
          y: 33
          z: 8
          time: 98
        wkt: GEOGCS["WGS 84",DATUM["WGS_1984",SPHEROID["WGS 84",6378137,298.257223563,AUTHORITY["EPSG","7030"]],AUTHORITY["EPSG","6326"]],PRIMEM["Greenwich",0,AUTHORITY["EPSG","8901"]],UNIT["degree",0.01745329251994328,AUTHORITY["EPSG","9122"]],AUTHORITY["EPSG","4326"],TIMEEXTENT[2019-05-28T06:00:00Z,2019-05-30T06:00:00Z],VERTICALEXTENT[2.0,2.0,LENGTHUNIT["metre",1.0]]]
        horizontal:
          name:
          - longitude
          - latitude
          coordinates:
          - x
          - "y"
          geographic: BBOX[359.875,90.125,-0.125,-90.125]
        vertical:
          name:
          - height_above_ground
          coordinates:
          - z
          range:
          - 36.47
          - 99.07
        temporal:
          name: time
          coordinates:
          - time
          range:
          - 2019-05-28T06:00:00Z
          - 2019-05-28T18:00:00Z
          - 2019-05-29T06:00:00Z
          - 2019-05-29T18:00:00Z
          - 2019-05-30T06:00:00Z
      properties:
        dimensions:
          $ref: '#/components/schemas/Coordinate_s_shape'
        wkt:
          description: |-
            Well Known Text description of the collections coordinate reference system
            see http://docs.opengeospatial.org/is/12-063r5/12-063r5.html
          example: GEOGCS["WGS 84",DATUM["WGS_1984",SPHEROID["WGS 84",6378137,298.257223563,AUTHORITY["EPSG","7030"]],AUTHORITY["EPSG","6326"]],PRIMEM["Greenwich",0,AUTHORITY["EPSG","8901"]],UNIT["degree",0.01745329251994328,AUTHORITY["EPSG","9122"]],AUTHORITY["EPSG","4326"]]
          type: string
        horizontal:
          $ref: '#/components/schemas/Horizontal_coordinate_range_of_the_parameter'
        vertical:
          $ref: '#/components/schemas/Vertical_coordinate_range_of_the_parameter'
        temporal:
          $ref: '#/components/schemas/Time_coordinate_range_of_the_parameter'
      required:
      - dimensions
      - horizontal
      - wkt
      type: object
    Coordinate_s_shape:
      description: definition of the shape of the coordinate axis
      properties:
        x:
          description: x coordinate resolution
          format: int32
          type: integer
        y:
          description: y coordinate resolution
          format: int32
          type: integer
        z:
          description: vertical level resolution
          format: int32
          type: integer
        time:
          description: Time step resolution
          format: int32
          type: integer
      required:
      - x
      - "y"
      title: Coordinate's shape
      type: object
    Horizontal_coordinate_range_of_the_parameter:
      description: Definition of the spatial area supported by the parameter
      example:
        name:
        - longitude
        - latitude
        coordinates:
        - x
        - "y"
        geographic: BBOX[359.875,90.125,-0.125,-90.125]
      properties:
        name:
          description: A list of the names of the coordinates MUST be in the same
            order as the values in the coordinates array
          items:
            type: object
          type: array
        coordinates:
          description: A list of the coordinates
          items:
            type: string
          type: array
        geographic:
          description: Definition of the area covered by the collection as a Well
            Known Text Bounding Box
          type: string
      required:
      - coordinates
      - geographic
      title: Horizontal coordinate range of the parameter
      type: object
    Vertical_coordinate_range_of_the_parameter:
      description: Definition of the valid vertical coordinates for the parameter
      example:
        name:
        - height_above_ground
        coordinates:
        - z
        range:
        - 2
      properties:
        name:
          description: Name of the coordinates
          items:
            type: string
          type: array
        coordinates:
          description: coordinate
          items:
            type: string
          type: array
        range:
          items:
            type: number
          type: array
      required:
      - coordinates
      - name
      - range
      title: Vertical coordinate range of the parameter
      type: object
    Time_coordinate_range_of_the_parameter:
      description: Definition of the Time range supported by the parameter
      example:
        name: time
        coordinates:
        - time
        range:
        - 2019-05-28T06:00:00Z
        - 2019-05-28T18:00:00Z
        - 2019-05-29T06:00:00Z
        - 2019-05-29T18:00:00Z
        - 2019-05-30T06:00:00Z
      properties:
        name:
          description: Array of coordinate names MUST be in the same order as the
            coordinates array
          type: string
        coordinates:
          description: Coordinate axes names
          items:
            type: string
          type: array
        range:
          description: List of the available time dimension values in the collection
          items:
            type: string
          type: array
      required:
      - coordinates
      - name
      - range
      title: Time coordinate range of the parameter
      type: object
    Parameter_measurement_approach:
      description: Approach to calculating the data values
      properties:
        method:
          example: mean
          type: string
        duration:
          description: The time duration that the value was calculated for as an RFC3339
            duration value.  If the method value is instantaneous this value is not
            required.
          example: PT10M
          title: Measurement time duration
          type: string
      required:
      - method
      title: Parameter measurement approach
      type: object
    edrFeatureCollectionGeoJSON:
      example:
        timeStamp: 2017-08-17T08:05:32Z
        features:
        - geometry: ""
          links:
          - variables:
              within_units:
              - km
              - miles
              output_formats:
              - CoverageJSON
              - GeoJSON
              - IWXXM
              - GRIB
              description: Query to return data for a defined well known text point
              query_type: trajectory
              title: Position query
              width_units:
              - km
              - miles
              height_units:
              - m
              - hPa
              default_output_format: default_output_format
              crs_details:
              - wkt: GEOGCS["WGS 84",DATUM["WGS_1984",SPHEROID["WGS 84",6378137,298.257223563,AUTHORITY["EPSG","7030"]],AUTHORITY["EPSG","6326"]],PRIMEM["Greenwich",0,AUTHORITY["EPSG","8901"]],UNIT["degree",0.01745329251994328,AUTHORITY["EPSG","9122"]],AUTHORITY["EPSG","4326"]]
                crs: native
              - wkt: GEOGCS["WGS 84",DATUM["WGS_1984",SPHEROID["WGS 84",6378137,298.257223563,AUTHORITY["EPSG","7030"]],AUTHORITY["EPSG","6326"]],PRIMEM["Greenwich",0,AUTHORITY["EPSG","8901"]],UNIT["degree",0.01745329251994328,AUTHORITY["EPSG","9122"]],AUTHORITY["EPSG","4326"]]
                crs: native
              coords:
                tag: Well Known Text POINT definition i.e. POINT(-120 55)
            hreflang: en
            templated: true
            rel: alternate
            length: 0
            href: http://data.example.com/collections/monitoringsites/locations/1234
            type: application/geo+json
            title: Monitoring site name
          - variables:
              within_units:
              - km
              - miles
              output_formats:
              - CoverageJSON
              - GeoJSON
              - IWXXM
              - GRIB
              description: Query to return data for a defined well known text point
              query_type: trajectory
              title: Position query
              width_units:
              - km
              - miles
              height_units:
              - m
              - hPa
              default_output_format: default_output_format
              crs_details:
              - wkt: GEOGCS["WGS 84",DATUM["WGS_1984",SPHEROID["WGS 84",6378137,298.257223563,AUTHORITY["EPSG","7030"]],AUTHORITY["EPSG","6326"]],PRIMEM["Greenwich",0,AUTHORITY["EPSG","8901"]],UNIT["degree",0.01745329251994328,AUTHORITY["EPSG","9122"]],AUTHORITY["EPSG","4326"]]
                crs: native
              - wkt: GEOGCS["WGS 84",DATUM["WGS_1984",SPHEROID["WGS 84",6378137,298.257223563,AUTHORITY["EPSG","7030"]],AUTHORITY["EPSG","6326"]],PRIMEM["Greenwich",0,AUTHORITY["EPSG","8901"]],UNIT["degree",0.01745329251994328,AUTHORITY["EPSG","9122"]],AUTHORITY["EPSG","4326"]]
                crs: native
              coords:
                tag: Well Known Text POINT definition i.e. POINT(-120 55)
            hreflang: en
            templated: true
            rel: alternate
            length: 0
            href: http://data.example.com/collections/monitoringsites/locations/1234
            type: application/geo+json
            title: Monitoring site name
          id: "f123"
          type: Feature
          properties:
          - datetime: 2018-02-12T00:00:00Z/2018-03-18T12:31:12Z
            label: Monitoring site name
            parameter-name:
            - velocity
            - temperature
            edrqueryendpoint: https://example.org/api/collections/collection/locations/location_123
        - geometry: ""
          links:
          - variables:
              within_units:
              - km
              - miles
              output_formats:
              - CoverageJSON
              - GeoJSON
              - IWXXM
              - GRIB
              description: Query to return data for a defined well known text point
              query_type: trajectory
              title: Position query
              width_units:
              - km
              - miles
              height_units:
              - m
              - hPa
              default_output_format: default_output_format
              crs_details:
              - wkt: GEOGCS["WGS 84",DATUM["WGS_1984",SPHEROID["WGS 84",6378137,298.257223563,AUTHORITY["EPSG","7030"]],AUTHORITY["EPSG","6326"]],PRIMEM["Greenwich",0,AUTHORITY["EPSG","8901"]],UNIT["degree",0.01745329251994328,AUTHORITY["EPSG","9122"]],AUTHORITY["EPSG","4326"]]
                crs: native
              - wkt: GEOGCS["WGS 84",DATUM["WGS_1984",SPHEROID["WGS 84",6378137,298.257223563,AUTHORITY["EPSG","7030"]],AUTHORITY["EPSG","6326"]],PRIMEM["Greenwich",0,AUTHORITY["EPSG","8901"]],UNIT["degree",0.01745329251994328,AUTHORITY["EPSG","9122"]],AUTHORITY["EPSG","4326"]]
                crs: native
              coords:
                tag: Well Known Text POINT definition i.e. POINT(-120 55)
            hreflang: en
            templated: true
            rel: alternate
            length: 0
            href: http://data.example.com/collections/monitoringsites/locations/1234
            type: application/geo+json
            title: Monitoring site name
          - variables:
              within_units:
              - km
              - miles
              output_formats:
              - CoverageJSON
              - GeoJSON
              - IWXXM
              - GRIB
              description: Query to return data for a defined well known text point
              query_type: trajectory
              title: Position query
              width_units:
              - km
              - miles
              height_units:
              - m
              - hPa
              default_output_format: default_output_format
              crs_details:
              - wkt: GEOGCS["WGS 84",DATUM["WGS_1984",SPHEROID["WGS 84",6378137,298.257223563,AUTHORITY["EPSG","7030"]],AUTHORITY["EPSG","6326"]],PRIMEM["Greenwich",0,AUTHORITY["EPSG","8901"]],UNIT["degree",0.01745329251994328,AUTHORITY["EPSG","9122"]],AUTHORITY["EPSG","4326"]]
                crs: native
              - wkt: GEOGCS["WGS 84",DATUM["WGS_1984",SPHEROID["WGS 84",6378137,298.257223563,AUTHORITY["EPSG","7030"]],AUTHORITY["EPSG","6326"]],PRIMEM["Greenwich",0,AUTHORITY["EPSG","8901"]],UNIT["degree",0.01745329251994328,AUTHORITY["EPSG","9122"]],AUTHORITY["EPSG","4326"]]
                crs: native
              coords:
                tag: Well Known Text POINT definition i.e. POINT(-120 55)
            hreflang: en
            templated: true
            rel: alternate
            length: 0
            href: http://data.example.com/collections/monitoringsites/locations/1234
            type: application/geo+json
            title: Monitoring site name
          id: "f123"
          type: Feature
          properties:
          - datetime: 2018-02-12T00:00:00Z/2018-03-18T12:31:12Z
            label: Monitoring site name
            parameter-name:
            - velocity
            - temperature
            edrqueryendpoint: https://example.org/api/collections/collection/locations/location_123
        numberReturned: 10
        links:
        - variables:
            within_units:
            - km
            - miles
            output_formats:
            - CoverageJSON
            - GeoJSON
            - IWXXM
            - GRIB
            description: Query to return data for a defined well known text point
            query_type: trajectory
            title: Position query
            width_units:
            - km
            - miles
            height_units:
            - m
            - hPa
            default_output_format: default_output_format
            crs_details:
            - wkt: GEOGCS["WGS 84",DATUM["WGS_1984",SPHEROID["WGS 84",6378137,298.257223563,AUTHORITY["EPSG","7030"]],AUTHORITY["EPSG","6326"]],PRIMEM["Greenwich",0,AUTHORITY["EPSG","8901"]],UNIT["degree",0.01745329251994328,AUTHORITY["EPSG","9122"]],AUTHORITY["EPSG","4326"]]
              crs: native
            - wkt: GEOGCS["WGS 84",DATUM["WGS_1984",SPHEROID["WGS 84",6378137,298.257223563,AUTHORITY["EPSG","7030"]],AUTHORITY["EPSG","6326"]],PRIMEM["Greenwich",0,AUTHORITY["EPSG","8901"]],UNIT["degree",0.01745329251994328,AUTHORITY["EPSG","9122"]],AUTHORITY["EPSG","4326"]]
              crs: native
            coords:
              tag: Well Known Text POINT definition i.e. POINT(-120 55)
          hreflang: en
          templated: true
          rel: alternate
          length: 0
          href: http://data.example.com/collections/monitoringsites/locations/1234
          type: application/geo+json
          title: Monitoring site name
        - variables:
            within_units:
            - km
            - miles
            output_formats:
            - CoverageJSON
            - GeoJSON
            - IWXXM
            - GRIB
            description: Query to return data for a defined well known text point
            query_type: trajectory
            title: Position query
            width_units:
            - km
            - miles
            height_units:
            - m
            - hPa
            default_output_format: default_output_format
            crs_details:
            - wkt: GEOGCS["WGS 84",DATUM["WGS_1984",SPHEROID["WGS 84",6378137,298.257223563,AUTHORITY["EPSG","7030"]],AUTHORITY["EPSG","6326"]],PRIMEM["Greenwich",0,AUTHORITY["EPSG","8901"]],UNIT["degree",0.01745329251994328,AUTHORITY["EPSG","9122"]],AUTHORITY["EPSG","4326"]]
              crs: native
            - wkt: GEOGCS["WGS 84",DATUM["WGS_1984",SPHEROID["WGS 84",6378137,298.257223563,AUTHORITY["EPSG","7030"]],AUTHORITY["EPSG","6326"]],PRIMEM["Greenwich",0,AUTHORITY["EPSG","8901"]],UNIT["degree",0.01745329251994328,AUTHORITY["EPSG","9122"]],AUTHORITY["EPSG","4326"]]
              crs: native
            coords:
              tag: Well Known Text POINT definition i.e. POINT(-120 55)
          hreflang: en
          templated: true
          rel: alternate
          length: 0
          href: http://data.example.com/collections/monitoringsites/locations/1234
          type: application/geo+json
          title: Monitoring site name
        type: FeatureCollection
        numberMatched: 127
        parameters:
        - type: Parameter
          id: sea_ice
          description: Sea Ice concentration (ice=1;no ice=0)
          unit:
            label: Ratio
            symbol:
              value: "1"
              type: http://www.opengis.net/def/uom/UCUM/
          observedProperty:
            id: http://vocab.nerc.ac.uk/standard_name/sea_ice_area_fraction/
            label: Sea Ice Concentration
        - type: Parameter
          id: sea_ice
          description: Sea Ice concentration (ice=1;no ice=0)
          unit:
            label: Ratio
            symbol:
              value: "1"
              type: http://www.opengis.net/def/uom/UCUM/
          observedProperty:
            id: http://vocab.nerc.ac.uk/standard_name/sea_ice_area_fraction/
            label: Sea Ice Concentration
      properties:
        type:
          enum:
          - FeatureCollection
          type: string
        features:
          items:
            $ref: '#/components/schemas/featureGeoJSON'
          type: array
        parameters:
          description: list of the data parameters available in the collection
          items:
            $ref: '#/components/schemas/parameter'
          type: array
        links:
          items:
            $ref: '#/components/schemas/link'
          type: array
        timeStamp:
          description: This property indicates the time and date when the response
            was generated.
          example: 2017-08-17T08:05:32Z
          format: date-time
          type: string
        numberMatched:
          description: |-
            The number of features of the feature type that match the selection
            parameters like `bbox`.
          example: 127
          minimum: 0
          type: integer
        numberReturned:
          description: |-
            The number of features in the feature collection.

            A server may omit this information in a response, if the information
            about the number of features is not known or difficult to compute.

            If the value is provided, the value shall be identical to the number
            of items in the "features" array.
          example: 10
          minimum: 0
          type: integer
      required:
      - features
      - type
      type: object
    instances:
      example:
        instances:
        - extent:
            vertical:
              vrs: VERTCS["WGS_1984",DATUM["D_WGS_1984",SPHEROID["WGS_1984",6378137.0,298.257223563]],PARAMETER["Vertical_Shift",0.0],PARAMETER["Direction",1.0],UNIT["Meter",1.0]],AXIS["Up",UP]
              name: name
              interval:
              - - "850"
              - - "850"
            spatial:
              crs: GEOGCS["WGS 84",DATUM["WGS_1984",SPHEROID["WGS 84",6378137,298.257223563,AUTHORITY["EPSG","7030"]],AUTHORITY["EPSG","6326"]],PRIMEM["Greenwich",0,AUTHORITY["EPSG","8901"]],UNIT["degree",0.01745329251994328,AUTHORITY["EPSG","9122"]],AUTHORITY["EPSG","4326"]]
              bbox:
              - -180
              - -90
              - 180
              - 90
              name: name
            temporal:
              trs: TIMECRS["DateTime",TDATUM["Gregorian Calendar"],CS[TemporalDateTime,1],AXIS["Time
                (T)",future]
              name: name
              interval:
              - - 2020-11-12T12:15Z,2020-11-12T12:30Z,2020-11-12T12:45Z
              - - 2020-11-12T12:15Z,2020-11-12T12:30Z,2020-11-12T12:45Z
          parameter_names:
            key: '{}'
          keywords:
          - keywords
          - keywords
          crs:
          - crs
          - crs
          output_formats:
          - CoverageJSON
          - GeoJSON
          - IWXXM
          - GRIB
          description: Last 24 hours Metar observations
          links:
          - href: https://wlocalhost:8080/service/description.html
            hreflang: en
            rel: service-doc
            type: text/html
            title: ""
          - href: https://localhost:8080/service/licence.html
            hreflang: en
            rel: licence
            type: text/html
            title: ""
          - href: https://localhost:8080/service/terms-and-conditions.html
            hreflang: en
            rel: restrictions
            type: text/html
            title: ""
          - href: http://localhost:8080/edr/collections/the_collection_id/
            hreflang: en
            rel: collection
            type: collection
            title: Collection
          - href: http://localhost:8080/edr/collections/the_collection_id/position
            hreflang: en
            rel: data
            type: position
            title: Position
          - href: http://localhost:8080/edr/collections/the_collection_id/area
            hreflang: en
            rel: data
            type: area
            title: Area
          id: Metar data
          title: Metar observations
          data_queries: '{}'
        - extent:
            vertical:
              vrs: VERTCS["WGS_1984",DATUM["D_WGS_1984",SPHEROID["WGS_1984",6378137.0,298.257223563]],PARAMETER["Vertical_Shift",0.0],PARAMETER["Direction",1.0],UNIT["Meter",1.0]],AXIS["Up",UP]
              name: name
              interval:
              - - "850"
              - - "850"
            spatial:
              crs: GEOGCS["WGS 84",DATUM["WGS_1984",SPHEROID["WGS 84",6378137,298.257223563,AUTHORITY["EPSG","7030"]],AUTHORITY["EPSG","6326"]],PRIMEM["Greenwich",0,AUTHORITY["EPSG","8901"]],UNIT["degree",0.01745329251994328,AUTHORITY["EPSG","9122"]],AUTHORITY["EPSG","4326"]]
              bbox:
              - -180
              - -90
              - 180
              - 90
              name: name
            temporal:
              trs: TIMECRS["DateTime",TDATUM["Gregorian Calendar"],CS[TemporalDateTime,1],AXIS["Time
                (T)",future]
              name: name
              interval:
              - - 2020-11-12T12:15Z,2020-11-12T12:30Z,2020-11-12T12:45Z
              - - 2020-11-12T12:15Z,2020-11-12T12:30Z,2020-11-12T12:45Z
          parameter_names:
            key: '{}'
          keywords:
          - keywords
          - keywords
          crs:
          - crs
          - crs
          output_formats:
          - CoverageJSON
          - GeoJSON
          - IWXXM
          - GRIB
          description: Last 24 hours Metar observations
          links:
          - href: https://wlocalhost:8080/service/description.html
            hreflang: en
            rel: service-doc
            type: text/html
            title: ""
          - href: https://localhost:8080/service/licence.html
            hreflang: en
            rel: licence
            type: text/html
            title: ""
          - href: https://localhost:8080/service/terms-and-conditions.html
            hreflang: en
            rel: restrictions
            type: text/html
            title: ""
          - href: http://localhost:8080/edr/collections/the_collection_id/
            hreflang: en
            rel: collection
            type: collection
            title: Collection
          - href: http://localhost:8080/edr/collections/the_collection_id/position
            hreflang: en
            rel: data
            type: position
            title: Position
          - href: http://localhost:8080/edr/collections/the_collection_id/area
            hreflang: en
            rel: data
            type: area
            title: Area
          id: Metar data
          title: Metar observations
          data_queries: '{}'
        links:
        - href: http://localhost:8080/edr/collections/the_collection_id/instances
          hreflang: en
          rel: self
          type: application/json
        - href: http://localhost:8080/edr/collections/the_collection_id/instances?f=html
          hreflang: en
          rel: alternate
          type: text/html
        - href: http://localhost:8080/edr/collections/the_collection_id/instances?f=xml
          hreflang: en
          rel: alternate
          type: application/xml
      properties:
        links:
          example:
          - href: http://localhost:8080/edr/collections/the_collection_id/instances
            hreflang: en
            rel: self
            type: application/json
          - href: http://localhost:8080/edr/collections/the_collection_id/instances?f=html
            hreflang: en
            rel: alternate
            type: text/html
          - href: http://localhost:8080/edr/collections/the_collection_id/instances?f=xml
            hreflang: en
            rel: alternate
            type: application/xml
          items:
            $ref: '#/components/schemas/link'
          type: array
        instances:
          items:
            $ref: '#/components/schemas/collection'
          type: array
      required:
      - instances
      - links
      type: object
    featureGeoJSON:
      example:
        geometry: ""
        links:
        - variables:
            within_units:
            - km
            - miles
            output_formats:
            - CoverageJSON
            - GeoJSON
            - IWXXM
            - GRIB
            description: Query to return data for a defined well known text point
            query_type: trajectory
            title: Position query
            width_units:
            - km
            - miles
            height_units:
            - m
            - hPa
            default_output_format: default_output_format
            crs_details:
            - wkt: GEOGCS["WGS 84",DATUM["WGS_1984",SPHEROID["WGS 84",6378137,298.257223563,AUTHORITY["EPSG","7030"]],AUTHORITY["EPSG","6326"]],PRIMEM["Greenwich",0,AUTHORITY["EPSG","8901"]],UNIT["degree",0.01745329251994328,AUTHORITY["EPSG","9122"]],AUTHORITY["EPSG","4326"]]
              crs: native
            - wkt: GEOGCS["WGS 84",DATUM["WGS_1984",SPHEROID["WGS 84",6378137,298.257223563,AUTHORITY["EPSG","7030"]],AUTHORITY["EPSG","6326"]],PRIMEM["Greenwich",0,AUTHORITY["EPSG","8901"]],UNIT["degree",0.01745329251994328,AUTHORITY["EPSG","9122"]],AUTHORITY["EPSG","4326"]]
              crs: native
            coords:
              tag: Well Known Text POINT definition i.e. POINT(-120 55)
          hreflang: en
          templated: true
          rel: alternate
          length: 0
          href: http://data.example.com/collections/monitoringsites/locations/1234
          type: application/geo+json
          title: Monitoring site name
        - variables:
            within_units:
            - km
            - miles
            output_formats:
            - CoverageJSON
            - GeoJSON
            - IWXXM
            - GRIB
            description: Query to return data for a defined well known text point
            query_type: trajectory
            title: Position query
            width_units:
            - km
            - miles
            height_units:
            - m
            - hPa
            default_output_format: default_output_format
            crs_details:
            - wkt: GEOGCS["WGS 84",DATUM["WGS_1984",SPHEROID["WGS 84",6378137,298.257223563,AUTHORITY["EPSG","7030"]],AUTHORITY["EPSG","6326"]],PRIMEM["Greenwich",0,AUTHORITY["EPSG","8901"]],UNIT["degree",0.01745329251994328,AUTHORITY["EPSG","9122"]],AUTHORITY["EPSG","4326"]]
              crs: native
            - wkt: GEOGCS["WGS 84",DATUM["WGS_1984",SPHEROID["WGS 84",6378137,298.257223563,AUTHORITY["EPSG","7030"]],AUTHORITY["EPSG","6326"]],PRIMEM["Greenwich",0,AUTHORITY["EPSG","8901"]],UNIT["degree",0.01745329251994328,AUTHORITY["EPSG","9122"]],AUTHORITY["EPSG","4326"]]
              crs: native
            coords:
              tag: Well Known Text POINT definition i.e. POINT(-120 55)
          hreflang: en
          templated: true
          rel: alternate
          length: 0
          href: http://data.example.com/collections/monitoringsites/locations/1234
          type: application/geo+json
          title: Monitoring site name
        id: "f123"
        type: Feature
        properties:
        - datetime: 2018-02-12T00:00:00Z/2018-03-18T12:31:12Z
          label: Monitoring site name
          parameter-name:
          - velocity
          - temperature
          edrqueryendpoint: https://example.org/api/collections/collection/locations/location_123
      properties:
        type:
          enum:
          - Feature
          type: string
        geometry:
          oneOf:
          - $ref: '#/components/schemas/pointGeoJSON'
          - $ref: '#/components/schemas/multipointGeoJSON'
          - $ref: '#/components/schemas/linestringGeoJSON'
          - $ref: '#/components/schemas/multilinestringGeoJSON'
          - $ref: '#/components/schemas/polygonGeoJSON'
          - $ref: '#/components/schemas/multipolygonGeoJSON'
          - $ref: '#/components/schemas/geometrycollectionGeoJSON'
        properties:
          $ref: '#/components/schemas/edrProperties'
        id:
          oneOf:
          - type: string
          - type: integer
        links:
          items:
            $ref: '#/components/schemas/link'
          type: array
      required:
      - geometry
      - properties
      - type
      type: object
    pointGeoJSON:
      properties:
        type:
          enum:
          - Point
          type: string
        coordinates:
          items:
            type: number
          minItems: 2
          type: array
      required:
      - coordinates
      - type
      type: object
    multipointGeoJSON:
      properties:
        type:
          enum:
          - MultiPoint
          type: string
        coordinates:
          items:
            items:
              type: number
            minItems: 2
            type: array
          type: array
      required:
      - coordinates
      - type
      type: object
    linestringGeoJSON:
      properties:
        type:
          enum:
          - LineString
          - LineStringM
          - LineStringZ
          - LineStringZM
          type: string
        coordinates:
          items:
            items:
              items:
                type: number
              maxItems: 4
              minItems: 2
              type: array
            minItems: 2
            type: array
          type: array
      required:
      - coordinates
      - type
      type: object
    multilinestringGeoJSON:
      properties:
        type:
          enum:
          - MultiLineString
          type: string
        coordinates:
          items:
            items:
              items:
                type: number
              minItems: 2
              type: array
            minItems: 2
            type: array
          type: array
      required:
      - coordinates
      - type
      type: object
    polygonGeoJSON:
      properties:
        type:
          enum:
          - Polygon
          type: string
        coordinates:
          items:
            items:
              items:
                type: number
              minItems: 2
              type: array
            minItems: 4
            type: array
          type: array
      required:
      - coordinates
      - type
      type: object
    multipolygonGeoJSON:
      properties:
        type:
          enum:
          - MultiPolygon
          type: string
        coordinates:
          items:
            items:
              items:
                items:
                  type: number
                minItems: 2
                type: array
              minItems: 4
              type: array
            type: array
          type: array
      required:
      - coordinates
      - type
      type: object
    geometrycollectionGeoJSON:
      properties:
        type:
          enum:
          - GeometryCollection
          type: string
        geometries:
          items:
            oneOf:
            - $ref: '#/components/schemas/pointGeoJSON'
            - $ref: '#/components/schemas/multipointGeoJSON'
            - $ref: '#/components/schemas/linestringGeoJSON'
            - $ref: '#/components/schemas/multilinestringGeoJSON'
            - $ref: '#/components/schemas/polygonGeoJSON'
            - $ref: '#/components/schemas/multipolygonGeoJSON'
            - $ref: '#/components/schemas/geometrycollectionGeoJSON'
          type: array
      required:
      - geometries
      - type
      type: object
    edrProperties:
      default: {}
      description: Properties to describe existing EDR features -- may be real-world
        or virtual sampling features.
      example:
      - datetime: 2018-02-12T00:00:00Z/2018-03-18T12:31:12Z
        label: Monitoring site name
        parameter-name:
        - velocity
        - temperature
        edrqueryendpoint: https://example.org/api/collections/collection/locations/location_123
      properties:
        datetime:
          default: ""
          description: Either a date-time or a period string that adheres to RFC 3339.
            Indicates the time instant or period for which data are available from
            the EDR feature.
          example: '[2018-02-12T00:00:00Z/2018-03-18T12:31:12Z]'
          title: Date/time Domain
          type: string
        parameter-name:
          description: Unique IDs of available parameters, this is the value used
            for querying the data and corresponds to an ID in the parameter metadata
            of the collection.
          items:
            default: ""
            description: Each entry should contain one parameter ID that can be used
              to query against the feature.
            example: '[velocity, temperature]'
            title: Parameter ID list
            type: string
          title: Available Parameters
          type: array
        label:
          default: ""
          description: A label such as a site name or other text to use on a link.
          example: '[Site A]'
          title: Label
          type: string
        edrqueryendpoint:
          default: ""
          description: A URI identifying the query end point. May identify a specific
            location.
          example: '[https://example.org/api/collections/collection/locations/location_123d}]'
          title: EDR Query Endpoint
          type: string
      required:
      - datetime
      - edrqueryendpoint
      - label
      - parameter-name
      title: EDR GeoJSON Properties
      type: object
    observedProperty:
      description: Description of the property
      example:
        id: http://vocab.nerc.ac.uk/standard_name/sea_ice_area_fraction/
        label: Sea Ice Concentration
      properties:
        id:
          description: |-
            URI linking to an external registry which contains the definitive definition of
            the observed property
          type: string
        label:
          type: string
        description:
          type: string
        categories:
          items:
            $ref: '#/components/schemas/observedProperty_categories'
          type: array
      required:
      - label
      title: name of property
      type: object
    observedProperty_categories:
      minItems: 1
      properties:
        id:
          description: |-
            URI linking to an external registry which contains the definitive definition of
            the observed property
          type: string
        label:
          type: string
        description:
          type: string
      required:
      - id
      - label
      type: object
